{"mappings":"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","sources":["node_modules/webworkify/index.js","node_modules/pica/lib/mathlib.js","node_modules/multimath/index.js","node_modules/object-assign/index.js","node_modules/multimath/lib/base64decode.js","node_modules/multimath/lib/wa_detect.js","node_modules/pica/lib/mm_unsharp_mask/index.js","node_modules/pica/lib/mm_unsharp_mask/unsharp_mask.js","node_modules/glur/mono16.js","node_modules/pica/lib/mm_unsharp_mask/unsharp_mask_wasm.js","node_modules/pica/lib/mm_unsharp_mask/unsharp_mask_wasm_base64.js","node_modules/pica/lib/mm_resize/index.js","node_modules/pica/lib/mm_resize/resize.js","node_modules/pica/lib/mm_resize/resize_filter_gen.js","node_modules/pica/lib/mm_resize/resize_filter_info.js","node_modules/pica/lib/mm_resize/convolve.js","node_modules/pica/lib/mm_resize/resize_wasm.js","node_modules/pica/lib/mm_resize/convolve_wasm_base64.js","lib/index.js","lib/ahash.js","lib/imageUtils.js","node_modules/canvas/browser.js","node_modules/canvas/lib/parse-font.js","node_modules/pica/index.js","node_modules/pica/lib/pool.js","node_modules/pica/lib/utils.js","node_modules/pica/lib/worker.js","node_modules/pica/lib/stepper.js","node_modules/pica/lib/tiler.js","lib/hash.js","lib/dhash.js","lib/phash.js","lib/whash.js","lib/cropResistantHash.js","lib/blur.js","node_modules/@parcel/node-resolver-core/lib/_empty.js"],"sourcesContent":["var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn, options) {\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp && exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            'function(require,module,exports){' + fn + '(self); }',\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        'function(require,module,exports){' +\n            // try to call default if defined to also support babel esmodule exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);' +\n        '}',\n        scache\n    ];\n\n    var workerSources = {};\n    resolveSources(skey);\n\n    function resolveSources(key) {\n        workerSources[key] = true;\n\n        for (var depPath in sources[key][1]) {\n            var depKey = sources[key][1][depPath];\n            if (!workerSources[depKey]) {\n                resolveSources(depKey);\n            }\n        }\n    }\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(workerSources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    var blob = new Blob([src], { type: 'text/javascript' });\n    if (options && options.bare) { return blob; }\n    var workerUrl = URL.createObjectURL(blob);\n    var worker = new Worker(workerUrl);\n    worker.objectURL = workerUrl;\n    return worker;\n};\n","// Collection of math functions\n//\n// 1. Combine components together\n// 2. Has async init to load wasm modules\n//\n'use strict';\n\n\nconst Multimath = require('multimath');\n\nconst mm_unsharp_mask = require('./mm_unsharp_mask');\nconst mm_resize       = require('./mm_resize');\n\n\nfunction MathLib(requested_features) {\n  const __requested_features = requested_features || [];\n\n  let features = {\n    js:   __requested_features.indexOf('js') >= 0,\n    wasm: __requested_features.indexOf('wasm') >= 0\n  };\n\n  Multimath.call(this, features);\n\n  this.features = {\n    js:   features.js,\n    wasm: features.wasm && this.has_wasm()\n  };\n\n  this.use(mm_unsharp_mask);\n  this.use(mm_resize);\n}\n\n\nMathLib.prototype = Object.create(Multimath.prototype);\nMathLib.prototype.constructor = MathLib;\n\n\nMathLib.prototype.resizeAndUnsharp = function resizeAndUnsharp(options, cache) {\n  let result = this.resize(options, cache);\n\n  if (options.unsharpAmount) {\n    this.unsharp_mask(\n      result,\n      options.toWidth,\n      options.toHeight,\n      options.unsharpAmount,\n      options.unsharpRadius,\n      options.unsharpThreshold\n    );\n  }\n\n  return result;\n};\n\n\nmodule.exports = MathLib;\n","'use strict';\n\n\nvar assign         = require('object-assign');\nvar base64decode   = require('./lib/base64decode');\nvar hasWebAssembly = require('./lib/wa_detect');\n\n\nvar DEFAULT_OPTIONS = {\n  js: true,\n  wasm: true\n};\n\n\nfunction MultiMath(options) {\n  if (!(this instanceof MultiMath)) return new MultiMath(options);\n\n  var opts = assign({}, DEFAULT_OPTIONS, options || {});\n\n  this.options         = opts;\n\n  this.__cache         = {};\n\n  this.__init_promise  = null;\n  this.__modules       = opts.modules || {};\n  this.__memory        = null;\n  this.__wasm          = {};\n\n  this.__isLE = ((new Uint32Array((new Uint8Array([ 1, 0, 0, 0 ])).buffer))[0] === 1);\n\n  if (!this.options.js && !this.options.wasm) {\n    throw new Error('mathlib: at least \"js\" or \"wasm\" should be enabled');\n  }\n}\n\n\nMultiMath.prototype.has_wasm = hasWebAssembly;\n\n\nMultiMath.prototype.use = function (module) {\n  this.__modules[module.name] = module;\n\n  // Pin the best possible implementation\n  if (this.options.wasm && this.has_wasm() && module.wasm_fn) {\n    this[module.name] = module.wasm_fn;\n  } else {\n    this[module.name] = module.fn;\n  }\n\n  return this;\n};\n\n\nMultiMath.prototype.init = function () {\n  if (this.__init_promise) return this.__init_promise;\n\n  if (!this.options.js && this.options.wasm && !this.has_wasm()) {\n    return Promise.reject(new Error('mathlib: only \"wasm\" was enabled, but it\\'s not supported'));\n  }\n\n  var self = this;\n\n  this.__init_promise = Promise.all(Object.keys(self.__modules).map(function (name) {\n    var module = self.__modules[name];\n\n    if (!self.options.wasm || !self.has_wasm() || !module.wasm_fn) return null;\n\n    // If already compiled - exit\n    if (self.__wasm[name]) return null;\n\n    // Compile wasm source\n    return WebAssembly.compile(self.__base64decode(module.wasm_src))\n      .then(function (m) { self.__wasm[name] = m; });\n  }))\n    .then(function () { return self; });\n\n  return this.__init_promise;\n};\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Methods below are for internal use from plugins\n\n\n// Simple decode base64 to typed array. Useful to load embedded webassembly\n// code. You probably don't need to call this method directly.\n//\nMultiMath.prototype.__base64decode = base64decode;\n\n\n// Increase current memory to include specified number of bytes. Do nothing if\n// size is already ok. You probably don't need to call this method directly,\n// because it will be invoked from `.__instance()`.\n//\nMultiMath.prototype.__reallocate = function mem_grow_to(bytes) {\n  if (!this.__memory) {\n    this.__memory = new WebAssembly.Memory({\n      initial: Math.ceil(bytes / (64 * 1024))\n    });\n    return this.__memory;\n  }\n\n  var mem_size = this.__memory.buffer.byteLength;\n\n  if (mem_size < bytes) {\n    this.__memory.grow(Math.ceil((bytes - mem_size) / (64 * 1024)));\n  }\n\n  return this.__memory;\n};\n\n\n// Returns instantinated webassembly item by name, with specified memory size\n// and environment.\n// - use cache if available\n// - do sync module init, if async init was not called earlier\n// - allocate memory if not enougth\n// - can export functions to webassembly via \"env_extra\",\n//   for example, { exp: Math.exp }\n//\nMultiMath.prototype.__instance = function instance(name, memsize, env_extra) {\n  if (memsize) this.__reallocate(memsize);\n\n  // If .init() was not called, do sync compile\n  if (!this.__wasm[name]) {\n    var module = this.__modules[name];\n    this.__wasm[name] = new WebAssembly.Module(this.__base64decode(module.wasm_src));\n  }\n\n  if (!this.__cache[name]) {\n    var env_base = {\n      memoryBase: 0,\n      memory: this.__memory,\n      tableBase: 0,\n      table: new WebAssembly.Table({ initial: 0, element: 'anyfunc' })\n    };\n\n    this.__cache[name] = new WebAssembly.Instance(this.__wasm[name], {\n      env: assign(env_base, env_extra || {})\n    });\n  }\n\n  return this.__cache[name];\n};\n\n\n// Helper to calculate memory aligh for pointers. Webassembly does not require\n// this, but you may wish to experiment. Default base = 8;\n//\nMultiMath.prototype.__align = function align(number, base) {\n  base = base || 8;\n  var reminder = number % base;\n  return number + (reminder ? base - reminder : 0);\n};\n\n\nmodule.exports = MultiMath;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","// base64 decode str -> Uint8Array, to load WA modules\n//\n'use strict';\n\n\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\nmodule.exports = function base64decode(str) {\n  var input = str.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max   = input.length;\n\n  var out = new Uint8Array((max * 3) >> 2);\n\n  // Collect by 6*4 bits (3 bytes)\n\n  var bits = 0;\n  var ptr  = 0;\n\n  for (var idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      out[ptr++] = (bits >> 16) & 0xFF;\n      out[ptr++] = (bits >> 8) & 0xFF;\n      out[ptr++] = bits & 0xFF;\n    }\n\n    bits = (bits << 6) | BASE64_MAP.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  var tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    out[ptr++] = (bits >> 16) & 0xFF;\n    out[ptr++] = (bits >> 8) & 0xFF;\n    out[ptr++] = bits & 0xFF;\n  } else if (tailbits === 18) {\n    out[ptr++] = (bits >> 10) & 0xFF;\n    out[ptr++] = (bits >> 2) & 0xFF;\n  } else if (tailbits === 12) {\n    out[ptr++] = (bits >> 4) & 0xFF;\n  }\n\n  return out;\n};\n","// Detect WebAssembly support.\n// - Check global WebAssembly object\n// - Try to load simple module (can be disabled via CSP)\n//\n'use strict';\n\n\nvar wa;\n\n\nmodule.exports = function hasWebAssembly() {\n  // use cache if called before;\n  if (typeof wa !== 'undefined') return wa;\n\n  wa = false;\n\n  if (typeof WebAssembly === 'undefined') return wa;\n\n  // If WebAssenbly is disabled, code can throw on compile\n  try {\n    // https://github.com/brion/min-wasm-fail/blob/master/min-wasm-fail.in.js\n    // Additional check that WA internals are correct\n\n    /* eslint-disable comma-spacing, max-len */\n    var bin      = new Uint8Array([ 0,97,115,109,1,0,0,0,1,6,1,96,1,127,1,127,3,2,1,0,5,3,1,0,1,7,8,1,4,116,101,115,116,0,0,10,16,1,14,0,32,0,65,1,54,2,0,32,0,40,2,0,11 ]);\n    var module   = new WebAssembly.Module(bin);\n    var instance = new WebAssembly.Instance(module, {});\n\n    // test storing to and loading from a non-zero location via a parameter.\n    // Safari on iOS 11.2.5 returns 0 unexpectedly at non-zero locations\n    if (instance.exports.test(4) !== 0) wa = true;\n\n    return wa;\n  } catch (__) {}\n\n  return wa;\n};\n","'use strict';\n\nmodule.exports = {\n  name:     'unsharp_mask',\n  fn:       require('./unsharp_mask'),\n  wasm_fn:  require('./unsharp_mask_wasm'),\n  wasm_src: require('./unsharp_mask_wasm_base64')\n};\n","// Unsharp mask filter\n//\n// http://stackoverflow.com/a/23322820/1031804\n// USM(O) = O + (2 * (Amount / 100) * (O - GB))\n// GB - gaussian blur.\n//\n// Image is converted from RGB to HSV, unsharp mask is applied to the\n// brightness channel and then image is converted back to RGB.\n//\n'use strict';\n\n\nvar glur_mono16 = require('glur/mono16');\n\n\nfunction hsv_v16(img, width, height) {\n  var size = width * height;\n  var out = new Uint16Array(size);\n  var r, g, b, max;\n  for (var i = 0; i < size; i++) {\n    r = img[4 * i];\n    g = img[4 * i + 1];\n    b = img[4 * i + 2];\n    max = (r >= g && r >= b) ? r : (g >= b && g >= r) ? g : b;\n    out[i] = max << 8;\n  }\n  return out;\n}\n\n\nmodule.exports = function unsharp(img, width, height, amount, radius, threshold) {\n  var v1, v2, vmul;\n  var diff, iTimes4;\n\n  if (amount === 0 || radius < 0.5) {\n    return;\n  }\n  if (radius > 2.0) {\n    radius = 2.0;\n  }\n\n  var brightness = hsv_v16(img, width, height);\n\n  var blured = new Uint16Array(brightness); // copy, because blur modify src\n\n  glur_mono16(blured, width, height, radius);\n\n  var amountFp = (amount / 100 * 0x1000 + 0.5)|0;\n  var thresholdFp = threshold << 8;\n\n  var size = width * height;\n\n  /* eslint-disable indent */\n  for (var i = 0; i < size; i++) {\n    v1 = brightness[i];\n    diff = v1 - blured[i];\n\n    if (Math.abs(diff) >= thresholdFp) {\n      // add unsharp mask to the brightness channel\n      v2 = v1 + ((amountFp * diff + 0x800) >> 12);\n\n      // Both v1 and v2 are within [0.0 .. 255.0] (0000-FF00) range, never going into\n      // [255.003 .. 255.996] (FF01-FFFF). This allows to round this value as (x+.5)|0\n      // later without overflowing.\n      v2 = v2 > 0xff00 ? 0xff00 : v2;\n      v2 = v2 < 0x0000 ? 0x0000 : v2;\n\n      // Avoid division by 0. V=0 means rgb(0,0,0), unsharp with unsharpAmount>0 cannot\n      // change this value (because diff between colors gets inflated), so no need to verify correctness.\n      v1 = v1 !== 0 ? v1 : 1;\n\n      // Multiplying V in HSV model by a constant is equivalent to multiplying each component\n      // in RGB by the same constant (same for HSL), see also:\n      // https://beesbuzz.biz/code/16-hsv-color-transforms\n      vmul = ((v2 << 12) / v1)|0;\n\n      // Result will be in [0..255] range because:\n      //  - all numbers are positive\n      //  - r,g,b <= (v1/256)\n      //  - r,g,b,(v1/256),(v2/256) <= 255\n      // So highest this number can get is X*255/X+0.5=255.5 which is < 256 and rounds down.\n\n      iTimes4 = i * 4;\n      img[iTimes4]     = (img[iTimes4]     * vmul + 0x800) >> 12; // R\n      img[iTimes4 + 1] = (img[iTimes4 + 1] * vmul + 0x800) >> 12; // G\n      img[iTimes4 + 2] = (img[iTimes4 + 2] * vmul + 0x800) >> 12; // B\n    }\n  }\n};\n","// Calculate Gaussian blur of an image using IIR filter\n// The method is taken from Intel's white paper and code example attached to it:\n// https://software.intel.com/en-us/articles/iir-gaussian-blur-filter\n// -implementation-using-intel-advanced-vector-extensions\n\nvar a0, a1, a2, a3, b1, b2, left_corner, right_corner;\n\nfunction gaussCoef(sigma) {\n  if (sigma < 0.5) {\n    sigma = 0.5;\n  }\n\n  var a = Math.exp(0.726 * 0.726) / sigma,\n      g1 = Math.exp(-a),\n      g2 = Math.exp(-2 * a),\n      k = (1 - g1) * (1 - g1) / (1 + 2 * a * g1 - g2);\n\n  a0 = k;\n  a1 = k * (a - 1) * g1;\n  a2 = k * (a + 1) * g1;\n  a3 = -k * g2;\n  b1 = 2 * g1;\n  b2 = -g2;\n  left_corner = (a0 + a1) / (1 - b1 - b2);\n  right_corner = (a2 + a3) / (1 - b1 - b2);\n\n  // Attempt to force type to FP32.\n  return new Float32Array([ a0, a1, a2, a3, b1, b2, left_corner, right_corner ]);\n}\n\nfunction convolveMono16(src, out, line, coeff, width, height) {\n  // takes src image and writes the blurred and transposed result into out\n\n  var prev_src, curr_src, curr_out, prev_out, prev_prev_out;\n  var src_index, out_index, line_index;\n  var i, j;\n  var coeff_a0, coeff_a1, coeff_b1, coeff_b2;\n\n  for (i = 0; i < height; i++) {\n    src_index = i * width;\n    out_index = i;\n    line_index = 0;\n\n    // left to right\n    prev_src = src[src_index];\n    prev_prev_out = prev_src * coeff[6];\n    prev_out = prev_prev_out;\n\n    coeff_a0 = coeff[0];\n    coeff_a1 = coeff[1];\n    coeff_b1 = coeff[4];\n    coeff_b2 = coeff[5];\n\n    for (j = 0; j < width; j++) {\n      curr_src = src[src_index];\n\n      curr_out = curr_src * coeff_a0 +\n                 prev_src * coeff_a1 +\n                 prev_out * coeff_b1 +\n                 prev_prev_out * coeff_b2;\n\n      prev_prev_out = prev_out;\n      prev_out = curr_out;\n      prev_src = curr_src;\n\n      line[line_index] = prev_out;\n      line_index++;\n      src_index++;\n    }\n\n    src_index--;\n    line_index--;\n    out_index += height * (width - 1);\n\n    // right to left\n    prev_src = src[src_index];\n    prev_prev_out = prev_src * coeff[7];\n    prev_out = prev_prev_out;\n    curr_src = prev_src;\n\n    coeff_a0 = coeff[2];\n    coeff_a1 = coeff[3];\n\n    for (j = width - 1; j >= 0; j--) {\n      curr_out = curr_src * coeff_a0 +\n                 prev_src * coeff_a1 +\n                 prev_out * coeff_b1 +\n                 prev_prev_out * coeff_b2;\n\n      prev_prev_out = prev_out;\n      prev_out = curr_out;\n\n      prev_src = curr_src;\n      curr_src = src[src_index];\n\n      out[out_index] = line[line_index] + prev_out;\n\n      src_index--;\n      line_index--;\n      out_index -= height;\n    }\n  }\n}\n\n\nfunction blurMono16(src, width, height, radius) {\n  // Quick exit on zero radius\n  if (!radius) { return; }\n\n  var out      = new Uint16Array(src.length),\n      tmp_line = new Float32Array(Math.max(width, height));\n\n  var coeff = gaussCoef(radius);\n\n  convolveMono16(src, out, tmp_line, coeff, width, height, radius);\n  convolveMono16(out, src, tmp_line, coeff, height, width, radius);\n}\n\nmodule.exports = blurMono16;\n","'use strict';\n\n\nmodule.exports = function unsharp(img, width, height, amount, radius, threshold) {\n  if (amount === 0 || radius < 0.5) {\n    return;\n  }\n\n  if (radius > 2.0) {\n    radius = 2.0;\n  }\n\n  var pixels = width * height;\n\n  var img_bytes_cnt        = pixels * 4;\n  var hsv_bytes_cnt        = pixels * 2;\n  var blur_bytes_cnt       = pixels * 2;\n  var blur_line_byte_cnt   = Math.max(width, height) * 4; // float32 array\n  var blur_coeffs_byte_cnt = 8 * 4; // float32 array\n\n  var img_offset         = 0;\n  var hsv_offset         = img_bytes_cnt;\n  var blur_offset        = hsv_offset + hsv_bytes_cnt;\n  var blur_tmp_offset    = blur_offset + blur_bytes_cnt;\n  var blur_line_offset   = blur_tmp_offset + blur_bytes_cnt;\n  var blur_coeffs_offset = blur_line_offset + blur_line_byte_cnt;\n\n  var instance = this.__instance(\n    'unsharp_mask',\n    img_bytes_cnt + hsv_bytes_cnt + blur_bytes_cnt * 2 + blur_line_byte_cnt + blur_coeffs_byte_cnt,\n    { exp: Math.exp }\n  );\n\n  // 32-bit copy is much faster in chrome\n  var img32 = new Uint32Array(img.buffer);\n  var mem32 = new Uint32Array(this.__memory.buffer);\n  mem32.set(img32);\n\n  // HSL\n  var fn = instance.exports.hsv_v16 || instance.exports._hsv_v16;\n  fn(img_offset, hsv_offset, width, height);\n\n  // BLUR\n  fn = instance.exports.blurMono16 || instance.exports._blurMono16;\n  fn(hsv_offset, blur_offset, blur_tmp_offset,\n    blur_line_offset, blur_coeffs_offset, width, height, radius);\n\n  // UNSHARP\n  fn = instance.exports.unsharp || instance.exports._unsharp;\n  fn(img_offset, img_offset, hsv_offset,\n    blur_offset, width, height, amount, threshold);\n\n  // 32-bit copy is much faster in chrome\n  img32.set(new Uint32Array(this.__memory.buffer, 0, pixels));\n};\n","// This is autogenerated file from math.wasm, don't edit.\n//\n'use strict';\n/* eslint-disable max-len */\nmodule.exports = 'AGFzbQEAAAAADAZkeWxpbmsAAAAAAAE0B2AAAGAEf39/fwBgBn9/f39/fwBgCH9/f39/f39/AGAIf39/f39/f30AYAJ9fwBgAXwBfAIZAgNlbnYDZXhwAAYDZW52Bm1lbW9yeQIAAAMHBgAFAgQBAwYGAX8AQQALB4oBCBFfX3dhc21fY2FsbF9jdG9ycwABFl9fYnVpbGRfZ2F1c3NpYW5fY29lZnMAAg5fX2dhdXNzMTZfbGluZQADCmJsdXJNb25vMTYABAdoc3ZfdjE2AAUHdW5zaGFycAAGDF9fZHNvX2hhbmRsZQMAGF9fd2FzbV9hcHBseV9kYXRhX3JlbG9jcwABCsUMBgMAAQvWAQEHfCABRNuGukOCGvs/IAC7oyICRAAAAAAAAADAohAAIgW2jDgCFCABIAKaEAAiAyADoCIGtjgCECABRAAAAAAAAPA/IAOhIgQgBKIgAyACIAKgokQAAAAAAADwP6AgBaGjIgS2OAIAIAEgBSAEmqIiB7Y4AgwgASADIAJEAAAAAAAA8D+gIASioiIItjgCCCABIAMgAkQAAAAAAADwv6AgBKKiIgK2OAIEIAEgByAIoCAFRAAAAAAAAPA/IAahoCIDo7Y4AhwgASAEIAKgIAOjtjgCGAuGBQMGfwl8An0gAyoCDCEVIAMqAgghFiADKgIUuyERIAMqAhC7IRACQCAEQQFrIghBAEgiCQRAIAIhByAAIQYMAQsgAiAALwEAuCIPIAMqAhi7oiIMIBGiIg0gDCAQoiAPIAMqAgS7IhOiIhQgAyoCALsiEiAPoqCgoCIOtjgCACACQQRqIQcgAEECaiEGIAhFDQAgCEEBIAhBAUgbIgpBf3MhCwJ/IAQgCmtBAXFFBEAgDiENIAgMAQsgAiANIA4gEKIgFCASIAAvAQK4Ig+ioKCgIg22OAIEIAJBCGohByAAQQRqIQYgDiEMIARBAmsLIQIgC0EAIARrRg0AA0AgByAMIBGiIA0gEKIgDyAToiASIAYvAQC4Ig6ioKCgIgy2OAIAIAcgDSARoiAMIBCiIA4gE6IgEiAGLwECuCIPoqCgoCINtjgCBCAHQQhqIQcgBkEEaiEGIAJBAkohACACQQJrIQIgAA0ACwsCQCAJDQAgASAFIAhsQQF0aiIAAn8gBkECay8BACICuCINIBW7IhKiIA0gFrsiE6KgIA0gAyoCHLuiIgwgEKKgIAwgEaKgIg8gB0EEayIHKgIAu6AiDkQAAAAAAADwQWMgDkQAAAAAAAAAAGZxBEAgDqsMAQtBAAs7AQAgCEUNACAGQQRrIQZBACAFa0EBdCEBA0ACfyANIBKiIAJB//8DcbgiDSAToqAgDyIOIBCioCAMIBGioCIPIAdBBGsiByoCALugIgxEAAAAAAAA8EFjIAxEAAAAAAAAAABmcQRAIAyrDAELQQALIQMgBi8BACECIAAgAWoiACADOwEAIAZBAmshBiAIQQFKIQMgDiEMIAhBAWshCCADDQALCwvRAgIBfwd8AkAgB0MAAAAAWw0AIARE24a6Q4Ia+z8gB0MAAAA/l7ujIglEAAAAAAAAAMCiEAAiDLaMOAIUIAQgCZoQACIKIAqgIg22OAIQIAREAAAAAAAA8D8gCqEiCyALoiAKIAkgCaCiRAAAAAAAAPA/oCAMoaMiC7Y4AgAgBCAMIAuaoiIOtjgCDCAEIAogCUQAAAAAAADwP6AgC6KiIg+2OAIIIAQgCiAJRAAAAAAAAPC/oCALoqIiCbY4AgQgBCAOIA+gIAxEAAAAAAAA8D8gDaGgIgqjtjgCHCAEIAsgCaAgCqO2OAIYIAYEQANAIAAgBSAIbEEBdGogAiAIQQF0aiADIAQgBSAGEAMgCEEBaiIIIAZHDQALCyAFRQ0AQQAhCANAIAIgBiAIbEEBdGogASAIQQF0aiADIAQgBiAFEAMgCEEBaiIIIAVHDQALCwtxAQN/IAIgA2wiBQRAA0AgASAAKAIAIgRBEHZB/wFxIgIgAiAEQQh2Qf8BcSIDIAMgBEH/AXEiBEkbIAIgA0sbIgYgBiAEIAIgBEsbIAMgBEsbQQh0OwEAIAFBAmohASAAQQRqIQAgBUEBayIFDQALCwuZAgIDfwF8IAQgBWwhBAJ/IAazQwAAgEWUQwAAyEKVu0QAAAAAAADgP6AiC5lEAAAAAAAA4EFjBEAgC6oMAQtBgICAgHgLIQUgBARAIAdBCHQhCUEAIQYDQCAJIAIgBkEBdCIHai8BACIBIAMgB2ovAQBrIgcgB0EfdSIIaiAIc00EQCAAIAZBAnQiCGoiCiAFIAdsQYAQakEMdSABaiIHQYD+AyAHQYD+A0gbIgdBACAHQQBKG0EMdCABQQEgARtuIgEgCi0AAGxBgBBqQQx2OgAAIAAgCEEBcmoiByABIActAABsQYAQakEMdjoAACAAIAhBAnJqIgcgASAHLQAAbEGAEGpBDHY6AAALIAZBAWoiBiAERw0ACwsL';\n","'use strict';\n\nmodule.exports = {\n  name:     'resize',\n  fn:       require('./resize'),\n  wasm_fn:  require('./resize_wasm'),\n  wasm_src: require('./convolve_wasm_base64')\n};\n","'use strict';\n\n\nconst createFilters        = require('./resize_filter_gen');\nconst { convolveHor, convolveVert, convolveHorWithPre, convolveVertWithPre } = require('./convolve');\n\n\nfunction hasAlpha(src, width, height) {\n  let ptr = 3, len = (width * height * 4)|0;\n  while (ptr < len) {\n    if (src[ptr] !== 255) return true;\n    ptr = (ptr + 4)|0;\n  }\n  return false;\n}\n\nfunction resetAlpha(dst, width, height) {\n  let ptr = 3, len = (width * height * 4)|0;\n  while (ptr < len) { dst[ptr] = 0xFF; ptr = (ptr + 4)|0; }\n}\n\n\nmodule.exports = function resize(options) {\n  const src   = options.src;\n  const srcW  = options.width;\n  const srcH  = options.height;\n  const destW = options.toWidth;\n  const destH = options.toHeight;\n  const scaleX = options.scaleX || options.toWidth / options.width;\n  const scaleY = options.scaleY || options.toHeight / options.height;\n  const offsetX = options.offsetX || 0;\n  const offsetY = options.offsetY || 0;\n  const dest  = options.dest || new Uint8Array(destW * destH * 4);\n\n  const filter = typeof options.filter === 'undefined' ? 'mks2013' : options.filter;\n  const filtersX = createFilters(filter, srcW, destW, scaleX, offsetX),\n        filtersY = createFilters(filter, srcH, destH, scaleY, offsetY);\n\n  const tmp  = new Uint16Array(destW * srcH * 4);\n\n  // Autodetect if alpha channel exists, and use appropriate method\n  if (hasAlpha(src, srcW, srcH)) {\n    convolveHorWithPre(src, tmp, srcW, srcH, destW, filtersX);\n    convolveVertWithPre(tmp, dest, srcH, destW, destH, filtersY);\n  } else {\n    convolveHor(src, tmp, srcW, srcH, destW, filtersX);\n    convolveVert(tmp, dest, srcH, destW, destH, filtersY);\n    resetAlpha(dest, destW, destH);\n  }\n\n  return dest;\n};\n","// Calculate convolution filters for each destination point,\n// and pack data to Int16Array:\n//\n// [ shift, length, data..., shift2, length2, data..., ... ]\n//\n// - shift - offset in src image\n// - length - filter length (in src points)\n// - data - filter values sequence\n//\n'use strict';\n\n\nvar FILTER_INFO = require('./resize_filter_info');\n\n// Precision of fixed FP values\nvar FIXED_FRAC_BITS = 14;\n\n\nfunction toFixedPoint(num) {\n  return Math.round(num * ((1 << FIXED_FRAC_BITS) - 1));\n}\n\n\nmodule.exports = function resizeFilterGen(filter, srcSize, destSize, scale, offset) {\n\n  var filterFunction = FILTER_INFO.filter[filter].fn;\n\n  var scaleInverted = 1.0 / scale;\n  var scaleClamped  = Math.min(1.0, scale); // For upscale\n\n  // Filter window (averaging interval), scaled to src image\n  var srcWindow = FILTER_INFO.filter[filter].win / scaleClamped;\n\n  var destPixel, srcPixel, srcFirst, srcLast, filterElementSize,\n      floatFilter, fxpFilter, total, pxl, idx, floatVal, filterTotal, filterVal;\n  var leftNotEmpty, rightNotEmpty, filterShift, filterSize;\n\n  var maxFilterElementSize = Math.floor((srcWindow + 1) * 2);\n  var packedFilter    = new Int16Array((maxFilterElementSize + 2) * destSize);\n  var packedFilterPtr = 0;\n\n  var slowCopy = !packedFilter.subarray || !packedFilter.set;\n\n  // For each destination pixel calculate source range and built filter values\n  for (destPixel = 0; destPixel < destSize; destPixel++) {\n\n    // Scaling should be done relative to central pixel point\n    srcPixel = (destPixel + 0.5) * scaleInverted + offset;\n\n    srcFirst = Math.max(0, Math.floor(srcPixel - srcWindow));\n    srcLast  = Math.min(srcSize - 1, Math.ceil(srcPixel + srcWindow));\n\n    filterElementSize = srcLast - srcFirst + 1;\n    floatFilter = new Float32Array(filterElementSize);\n    fxpFilter = new Int16Array(filterElementSize);\n\n    total = 0.0;\n\n    // Fill filter values for calculated range\n    for (pxl = srcFirst, idx = 0; pxl <= srcLast; pxl++, idx++) {\n      floatVal = filterFunction(((pxl + 0.5) - srcPixel) * scaleClamped);\n      total += floatVal;\n      floatFilter[idx] = floatVal;\n    }\n\n    // Normalize filter, convert to fixed point and accumulate conversion error\n    filterTotal = 0;\n\n    for (idx = 0; idx < floatFilter.length; idx++) {\n      filterVal = floatFilter[idx] / total;\n      filterTotal += filterVal;\n      fxpFilter[idx] = toFixedPoint(filterVal);\n    }\n\n    // Compensate normalization error, to minimize brightness drift\n    fxpFilter[destSize >> 1] += toFixedPoint(1.0 - filterTotal);\n\n    //\n    // Now pack filter to useable form\n    //\n    // 1. Trim heading and tailing zero values, and compensate shitf/length\n    // 2. Put all to single array in this format:\n    //\n    //    [ pos shift, data length, value1, value2, value3, ... ]\n    //\n\n    leftNotEmpty = 0;\n    while (leftNotEmpty < fxpFilter.length && fxpFilter[leftNotEmpty] === 0) {\n      leftNotEmpty++;\n    }\n\n    if (leftNotEmpty < fxpFilter.length) {\n      rightNotEmpty = fxpFilter.length - 1;\n      while (rightNotEmpty > 0 && fxpFilter[rightNotEmpty] === 0) {\n        rightNotEmpty--;\n      }\n\n      filterShift = srcFirst + leftNotEmpty;\n      filterSize = rightNotEmpty - leftNotEmpty + 1;\n\n      packedFilter[packedFilterPtr++] = filterShift; // shift\n      packedFilter[packedFilterPtr++] = filterSize; // size\n\n      if (!slowCopy) {\n        packedFilter.set(fxpFilter.subarray(leftNotEmpty, rightNotEmpty + 1), packedFilterPtr);\n        packedFilterPtr += filterSize;\n      } else {\n        // fallback for old IE < 11, without subarray/set methods\n        for (idx = leftNotEmpty; idx <= rightNotEmpty; idx++) {\n          packedFilter[packedFilterPtr++] = fxpFilter[idx];\n        }\n      }\n    } else {\n      // zero data, write header only\n      packedFilter[packedFilterPtr++] = 0; // shift\n      packedFilter[packedFilterPtr++] = 0; // size\n    }\n  }\n  return packedFilter;\n};\n","// Filter definitions to build tables for\n// resizing convolvers.\n//\n// Presets for quality 0..3. Filter functions + window size\n//\n'use strict';\n\n\nconst filter = {\n  // Nearest neibor\n  box: {\n    win: 0.5,\n    fn: function (x) {\n      if (x < 0) x = -x;\n      return (x < 0.5) ? 1.0 : 0.0;\n    }\n  },\n  // // Hamming\n  hamming: {\n    win: 1.0,\n    fn: function (x) {\n      if (x < 0) x = -x;\n      if (x >= 1.0) { return 0.0; }\n      if (x < 1.19209290E-07) { return 1.0; }\n      var xpi = x * Math.PI;\n      return ((Math.sin(xpi) / xpi) *  (0.54 + 0.46 * Math.cos(xpi / 1.0)));\n    }\n  },\n  // Lanczos, win = 2\n  lanczos2: {\n    win: 2.0,\n    fn: function (x) {\n      if (x < 0) x = -x;\n      if (x >= 2.0) { return 0.0; }\n      if (x < 1.19209290E-07) { return 1.0; }\n      var xpi = x * Math.PI;\n      return (Math.sin(xpi) / xpi) * Math.sin(xpi / 2.0) / (xpi / 2.0);\n    }\n  },\n  // Lanczos, win = 3\n  lanczos3: {\n    win: 3.0,\n    fn: function (x) {\n      if (x < 0) x = -x;\n      if (x >= 3.0) { return 0.0; }\n      if (x < 1.19209290E-07) { return 1.0; }\n      var xpi = x * Math.PI;\n      return (Math.sin(xpi) / xpi) * Math.sin(xpi / 3.0) / (xpi / 3.0);\n    }\n  },\n  // Magic Kernel Sharp 2013, win = 2.5\n  // http://johncostella.com/magic/\n  mks2013: {\n    win: 2.5,\n    fn: function (x) {\n      if (x < 0) x = -x;\n      if (x >= 2.5) { return 0.0; }\n      if (x >= 1.5) { return -0.125 * (x - 2.5) * (x - 2.5); }\n      if (x >= 0.5) { return 0.25 * (4 * x * x - 11 * x + 7); }\n      return 1.0625 - 1.75 * x * x;\n    }\n  }\n};\n\nmodule.exports = {\n  filter: filter,\n  // Legacy mapping\n  f2q: { box: 0, hamming: 1, lanczos2: 2, lanczos3: 3 },\n  q2f: [ 'box', 'hamming', 'lanczos2', 'lanczos3' ]\n};\n","// Resize convolvers, pure JS implementation\n//\n'use strict';\n\n\n// Precision of fixed FP values\n//var FIXED_FRAC_BITS = 14;\n\n\nfunction clampTo8(i) { return i < 0 ? 0 : (i > 255 ? 255 : i); }\nfunction clampNegative(i) { return i >= 0 ? i : 0; }\n\n// Convolve image data in horizontal direction. Can be used for:\n//\n// 1. bitmap with premultiplied alpha\n// 2. bitmap without alpha (all values 255)\n//\n// Notes:\n//\n// - output is transposed\n// - output resolution is ~15 bits per channel(for better precision).\n//\nfunction convolveHor(src, dest, srcW, srcH, destW, filters) {\n\n  var r, g, b, a;\n  var filterPtr, filterShift, filterSize;\n  var srcPtr, srcY, destX, filterVal;\n  var srcOffset = 0, destOffset = 0;\n\n  // For each row\n  for (srcY = 0; srcY < srcH; srcY++) {\n    filterPtr  = 0;\n\n    // Apply precomputed filters to each destination row point\n    for (destX = 0; destX < destW; destX++) {\n      // Get the filter that determines the current output pixel.\n      filterShift = filters[filterPtr++];\n      filterSize  = filters[filterPtr++];\n\n      srcPtr = (srcOffset + (filterShift * 4))|0;\n\n      r = g = b = a = 0;\n\n      // Apply the filter to the row to get the destination pixel r, g, b, a\n      for (; filterSize > 0; filterSize--) {\n        filterVal = filters[filterPtr++];\n\n        // Use reverse order to workaround deopts in old v8 (node v.10)\n        // Big thanks to @mraleph (Vyacheslav Egorov) for the tip.\n        a = (a + filterVal * src[srcPtr + 3])|0;\n        b = (b + filterVal * src[srcPtr + 2])|0;\n        g = (g + filterVal * src[srcPtr + 1])|0;\n        r = (r + filterVal * src[srcPtr])|0;\n        srcPtr = (srcPtr + 4)|0;\n      }\n\n      // Store 15 bits between passes for better precision\n      // Instead of shift to 14 (FIXED_FRAC_BITS), shift to 7 only\n      //\n      dest[destOffset + 3] = clampNegative(a >> 7);\n      dest[destOffset + 2] = clampNegative(b >> 7);\n      dest[destOffset + 1] = clampNegative(g >> 7);\n      dest[destOffset]     = clampNegative(r >> 7);\n      destOffset = (destOffset + srcH * 4)|0;\n    }\n\n    destOffset = ((srcY + 1) * 4)|0;\n    srcOffset  = ((srcY + 1) * srcW * 4)|0;\n  }\n}\n\n// Supplementary method for `convolveHor()`\n//\nfunction convolveVert(src, dest, srcW, srcH, destW, filters) {\n\n  var r, g, b, a;\n  var filterPtr, filterShift, filterSize;\n  var srcPtr, srcY, destX, filterVal;\n  var srcOffset = 0, destOffset = 0;\n\n  // For each row\n  for (srcY = 0; srcY < srcH; srcY++) {\n    filterPtr  = 0;\n\n    // Apply precomputed filters to each destination row point\n    for (destX = 0; destX < destW; destX++) {\n      // Get the filter that determines the current output pixel.\n      filterShift = filters[filterPtr++];\n      filterSize  = filters[filterPtr++];\n\n      srcPtr = (srcOffset + (filterShift * 4))|0;\n\n      r = g = b = a = 0;\n\n      // Apply the filter to the row to get the destination pixel r, g, b, a\n      for (; filterSize > 0; filterSize--) {\n        filterVal = filters[filterPtr++];\n\n        // Use reverse order to workaround deopts in old v8 (node v.10)\n        // Big thanks to @mraleph (Vyacheslav Egorov) for the tip.\n        a = (a + filterVal * src[srcPtr + 3])|0;\n        b = (b + filterVal * src[srcPtr + 2])|0;\n        g = (g + filterVal * src[srcPtr + 1])|0;\n        r = (r + filterVal * src[srcPtr])|0;\n        srcPtr = (srcPtr + 4)|0;\n      }\n\n      // Sync with premultiplied version for exact result match\n      r >>= 7;\n      g >>= 7;\n      b >>= 7;\n      a >>= 7;\n\n      // Bring this value back in range + round result.\n      //\n      dest[destOffset + 3] = clampTo8((a + (1 << 13)) >> 14);\n      dest[destOffset + 2] = clampTo8((b + (1 << 13)) >> 14);\n      dest[destOffset + 1] = clampTo8((g + (1 << 13)) >> 14);\n      dest[destOffset]     = clampTo8((r + (1 << 13)) >> 14);\n      destOffset = (destOffset + srcH * 4)|0;\n    }\n\n    destOffset = ((srcY + 1) * 4)|0;\n    srcOffset  = ((srcY + 1) * srcW * 4)|0;\n  }\n}\n\n\n// Premultiply & convolve image data in horizontal direction. Can be used for:\n//\n// - Any bitmap data, extracted with `.getImageData()` method (with\n//   non-premultiplied alpha)\n//\n// For images without alpha channel this method is slower than `convolveHor()`\n//\nfunction convolveHorWithPre(src, dest, srcW, srcH, destW, filters) {\n\n  var r, g, b, a, alpha;\n  var filterPtr, filterShift, filterSize;\n  var srcPtr, srcY, destX, filterVal;\n  var srcOffset = 0, destOffset = 0;\n\n  // For each row\n  for (srcY = 0; srcY < srcH; srcY++) {\n    filterPtr  = 0;\n\n    // Apply precomputed filters to each destination row point\n    for (destX = 0; destX < destW; destX++) {\n      // Get the filter that determines the current output pixel.\n      filterShift = filters[filterPtr++];\n      filterSize  = filters[filterPtr++];\n\n      srcPtr = (srcOffset + (filterShift * 4))|0;\n\n      r = g = b = a = 0;\n\n      // Apply the filter to the row to get the destination pixel r, g, b, a\n      for (; filterSize > 0; filterSize--) {\n        filterVal = filters[filterPtr++];\n\n        // Use reverse order to workaround deopts in old v8 (node v.10)\n        // Big thanks to @mraleph (Vyacheslav Egorov) for the tip.\n        alpha = src[srcPtr + 3];\n        a = (a + filterVal * alpha)|0;\n        b = (b + filterVal * src[srcPtr + 2] * alpha)|0;\n        g = (g + filterVal * src[srcPtr + 1] * alpha)|0;\n        r = (r + filterVal * src[srcPtr] * alpha)|0;\n        srcPtr = (srcPtr + 4)|0;\n      }\n\n      // Premultiply is (* alpha / 255).\n      // Postpone division for better performance\n      b = (b / 255)|0;\n      g = (g / 255)|0;\n      r = (r / 255)|0;\n\n      // Store 15 bits between passes for better precision\n      // Instead of shift to 14 (FIXED_FRAC_BITS), shift to 7 only\n      //\n      dest[destOffset + 3] = clampNegative(a >> 7);\n      dest[destOffset + 2] = clampNegative(b >> 7);\n      dest[destOffset + 1] = clampNegative(g >> 7);\n      dest[destOffset]     = clampNegative(r >> 7);\n      destOffset = (destOffset + srcH * 4)|0;\n    }\n\n    destOffset = ((srcY + 1) * 4)|0;\n    srcOffset  = ((srcY + 1) * srcW * 4)|0;\n  }\n}\n\n// Supplementary method for `convolveHorWithPre()`\n//\nfunction convolveVertWithPre(src, dest, srcW, srcH, destW, filters) {\n\n  var r, g, b, a;\n  var filterPtr, filterShift, filterSize;\n  var srcPtr, srcY, destX, filterVal;\n  var srcOffset = 0, destOffset = 0;\n\n  // For each row\n  for (srcY = 0; srcY < srcH; srcY++) {\n    filterPtr  = 0;\n\n    // Apply precomputed filters to each destination row point\n    for (destX = 0; destX < destW; destX++) {\n      // Get the filter that determines the current output pixel.\n      filterShift = filters[filterPtr++];\n      filterSize  = filters[filterPtr++];\n\n      srcPtr = (srcOffset + (filterShift * 4))|0;\n\n      r = g = b = a = 0;\n\n      // Apply the filter to the row to get the destination pixel r, g, b, a\n      for (; filterSize > 0; filterSize--) {\n        filterVal = filters[filterPtr++];\n\n        // Use reverse order to workaround deopts in old v8 (node v.10)\n        // Big thanks to @mraleph (Vyacheslav Egorov) for the tip.\n        a = (a + filterVal * src[srcPtr + 3])|0;\n        b = (b + filterVal * src[srcPtr + 2])|0;\n        g = (g + filterVal * src[srcPtr + 1])|0;\n        r = (r + filterVal * src[srcPtr])|0;\n        srcPtr = (srcPtr + 4)|0;\n      }\n\n      // Downscale to leave room for un-premultiply\n      r >>= 7;\n      g >>= 7;\n      b >>= 7;\n      a >>= 7;\n\n      // Un-premultiply\n      a = clampTo8((a + (1 << 13)) >> 14);\n      if (a > 0) {\n        r = (r * 255 / a)|0;\n        g = (g * 255 / a)|0;\n        b = (b * 255 / a)|0;\n      }\n\n      // Bring this value back in range + round result.\n      // Shift value = FIXED_FRAC_BITS + 7\n      //\n      dest[destOffset + 3] = a;\n      dest[destOffset + 2] = clampTo8((b + (1 << 13)) >> 14);\n      dest[destOffset + 1] = clampTo8((g + (1 << 13)) >> 14);\n      dest[destOffset]     = clampTo8((r + (1 << 13)) >> 14);\n      destOffset = (destOffset + srcH * 4)|0;\n    }\n\n    destOffset = ((srcY + 1) * 4)|0;\n    srcOffset  = ((srcY + 1) * srcW * 4)|0;\n  }\n}\n\n\nmodule.exports = {\n  convolveHor,\n  convolveVert,\n  convolveHorWithPre,\n  convolveVertWithPre\n};\n","'use strict';\n\n\nconst createFilters = require('./resize_filter_gen');\n\n\nfunction hasAlpha(src, width, height) {\n  let ptr = 3, len = (width * height * 4)|0;\n  while (ptr < len) {\n    if (src[ptr] !== 255) return true;\n    ptr = (ptr + 4)|0;\n  }\n  return false;\n}\n\n\nfunction resetAlpha(dst, width, height) {\n  let ptr = 3, len = (width * height * 4)|0;\n  while (ptr < len) { dst[ptr] = 0xFF; ptr = (ptr + 4)|0; }\n}\n\n\nfunction asUint8Array(src) {\n  return new Uint8Array(src.buffer, 0, src.byteLength);\n}\n\n\nlet IS_LE = true;\n// should not crash everything on module load in old browsers\ntry {\n  IS_LE = ((new Uint32Array((new Uint8Array([ 1, 0, 0, 0 ])).buffer))[0] === 1);\n} catch (__) {}\n\n\nfunction copyInt16asLE(src, target, target_offset) {\n  if (IS_LE) {\n    target.set(asUint8Array(src), target_offset);\n    return;\n  }\n\n  for (let ptr = target_offset, i = 0; i < src.length; i++) {\n    let data = src[i];\n    target[ptr++] = data & 0xFF;\n    target[ptr++] = (data >> 8) & 0xFF;\n  }\n}\n\nmodule.exports = function resize_wasm(options) {\n  const src     = options.src;\n  const srcW    = options.width;\n  const srcH    = options.height;\n  const destW   = options.toWidth;\n  const destH   = options.toHeight;\n  const scaleX  = options.scaleX || options.toWidth / options.width;\n  const scaleY  = options.scaleY || options.toHeight / options.height;\n  const offsetX = options.offsetX || 0.0;\n  const offsetY = options.offsetY || 0.0;\n  const dest    = options.dest || new Uint8Array(destW * destH * 4);\n\n  const filter = typeof options.filter === 'undefined' ? 'mks2013' : options.filter;\n  const filtersX = createFilters(filter, srcW, destW, scaleX, offsetX),\n        filtersY = createFilters(filter, srcH, destH, scaleY, offsetY);\n\n  // destination is 0 too.\n  const src_offset      = 0;\n  const src_size        = Math.max(src.byteLength, dest.byteLength);\n  // buffer between convolve passes\n  const tmp_offset      = this.__align(src_offset + src_size);\n  const tmp_size        = srcH * destW * 4 * 2; // 2 bytes per channel\n\n  const filtersX_offset = this.__align(tmp_offset + tmp_size);\n  const filtersY_offset = this.__align(filtersX_offset + filtersX.byteLength);\n  const alloc_bytes     = filtersY_offset + filtersY.byteLength;\n\n  const instance = this.__instance('resize', alloc_bytes);\n\n  //\n  // Fill memory block with data to process\n  //\n\n  const mem   = new Uint8Array(this.__memory.buffer);\n  const mem32 = new Uint32Array(this.__memory.buffer);\n\n  // 32-bit copy is much faster in chrome\n  const src32 = new Uint32Array(src.buffer);\n  mem32.set(src32);\n\n  // We should guarantee LE bytes order. Filters are not big, so\n  // speed difference is not significant vs direct .set()\n  copyInt16asLE(filtersX, mem, filtersX_offset);\n  copyInt16asLE(filtersY, mem, filtersY_offset);\n\n  // Now call webassembly method\n  // emsdk does method names with '_'\n  const fn = instance.exports.convolveHV || instance.exports._convolveHV;\n\n  if (hasAlpha(src, srcW, srcH)) {\n    fn(filtersX_offset, filtersY_offset, tmp_offset, srcW, srcH, destW, destH, 1);\n  } else {\n    fn(filtersX_offset, filtersY_offset, tmp_offset, srcW, srcH, destW, destH, 0);\n    resetAlpha(dest, destW, destH);\n  }\n\n  //\n  // Copy data back to typed array\n  //\n\n  // 32-bit copy is much faster in chrome\n  const dest32 = new Uint32Array(dest.buffer);\n  dest32.set(new Uint32Array(this.__memory.buffer, 0, destH * destW));\n\n  return dest;\n};\n","// This is autogenerated file from math.wasm, don't edit.\n//\n'use strict';\n/* eslint-disable max-len */\nmodule.exports = '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';\n","import {ahash} from \"./ahash.js\";\nimport {dhash} from \"./dhash.js\";\nimport {phash} from \"./phash.js\";\nimport {whash} from \"./whash.js\";\nimport {ImageHash} from \"./hash.js\";\nimport {cropResistantHash} from \"./cropResistantHash.js\";\n\n\nexport {\n    ahash,\n    dhash,\n    phash,\n    whash,\n    cropResistantHash,\n    ImageHash\n}\n\nif (typeof window !== 'undefined') {\n    window.ahash = ahash;\n    window.dhash = dhash;\n    window.phash = phash;\n    window.whash = whash;\n    window.cropResistantHash = cropResistantHash;\n    window.ImageHash = ImageHash;\n}\n\n","import {canvasUtil, grayScaleConverter} from \"./imageUtils.js\";\nimport {ImageHash} from \"./hash.js\";\n\n\n/**\n * @param image {Image}\n * @param size {number}\n */\nexport async function ahash(image, size = 8) {\n    const pixels = grayScaleConverter.convert(await canvasUtil.resizeImageAndGetData(image, size, size));\n\n    const hash = new Uint8ClampedArray(size * size);\n\n    let sum = 0;\n    for (let i = 0; i < pixels.length; i++) {\n        sum += pixels[i];\n    }\n    const avg = sum / pixels.length;\n\n    for (let i = 0; i < pixels.length; i++) {\n        hash[i] = pixels[i] > avg;\n    }\n\n    return new ImageHash(hash);\n}","import {createCanvas} from \"canvas\";\nimport Pica from \"pica/index.js\";\n\n/**\n * @typedef {{x: number, y: number}} Tuple\n */\n\nclass CanvasUtil {\n\n    /**\n     * @param image {Image|HTMLImageElement}\n     * @param width {number}\n     * @param height {number}\n     * @param options {{\n     *     sx: {number},\n     *     sy: {number},\n     *     sw: {number},\n     *     sh: {number},\n     * }}\n     * @return {Uint8ClampedArray}\n     */\n    async resizeImageAndGetData(image, width, height, options = {}) {\n        let canvas = await this.resizeImage(image, width, height, options);\n\n        const ctx = canvas.getContext(\"2d\");\n        return ctx.getImageData(0, 0, width, height).data;\n    }\n\n    async resizeImage(image, width, height, options) {\n        const {sx, sy, sw, sh} = options;\n\n        let fromCanvas = this.getImageCanvas(image, sx, sy, sw, sh);\n        let toCanvas;\n        let pica;\n\n        if (typeof window === \"undefined\") {\n            // This is not a browser, use the canvas package\n            toCanvas = createCanvas(width, height);\n            toCanvas.width = width;\n            toCanvas.height = height;\n\n            // Trick pica into thinking that this is a normal HTML cavas\n            fromCanvas[Symbol.toStringTag] = \"HTMLCanvasElement\";\n\n            pica = new Pica({\n                tile: 1024,\n                concurrency: 1,\n                features: [\"js\"],\n                idle: 2000,\n                createCanvas\n            });\n        } else {\n            function browserCreateCanvas(width, height) {\n                const canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                return canvas;\n            }\n\n            pica = new Pica({\n                tile: 1024,\n                concurrency: 1,\n                features: [\"js\", \"wasm\"], // Disable web workers & cib\n                idle: 2000,\n                browserCreateCanvas\n            });\n\n            toCanvas = browserCreateCanvas(width, height);\n        }\n\n        await pica.resize(fromCanvas, toCanvas);\n\n        return toCanvas;\n    }\n\n    getImageCanvas(image, sx, sy, sw, sh) {\n\n        if (Object.prototype.toString.call(image) === \"[object HTMLCanvasElement]\" && sx === undefined) {\n            return image;\n        }\n\n        const canvas = (typeof window === \"undefined\")\n            ? createCanvas(sw || image.width, sh || image.height)\n            : document.createElement(\"canvas\");\n\n        canvas.width = image.naturalWidth || sw;\n        canvas.height = image.naturalHeight || sh;\n\n        const ctx = canvas.getContext(\"2d\");\n\n        if (sx !== undefined) {\n            const sCtx = image.getContext(\"2d\");\n            const imageData = sCtx.getImageData(sx, sy, sw, sh);\n            canvas[Symbol.toStringTag] = \"HTMLCanvasElement\";\n\n            ctx.putImageData(imageData, 0, 0);\n        } else {\n            ctx.drawImage(image, 0, 0);\n        }\n\n        return canvas;\n    }\n    \n}\n\nexport const canvasUtil = new CanvasUtil();\n\nclass GrayScaleConverter {\n\n    /**\n     *\n     * RGBA -> L (ITU-R 601-2 luma transform)\n     *\n     * @param imgData {Uint8ClampedArray}\n     */\n    convert(imgData) {\n        const arr = new Uint8ClampedArray(imgData.length / 4);\n\n        for (let i = 0; i < imgData.length; i += 4) {\n            arr[i>>2] = Math.round((imgData[i] * 299 / 1000 + imgData[i + 1] * 587 / 1000 + imgData[i + 2] * 114 / 1000))\n        }\n\n        return arr;\n    }\n}\n\nexport const grayScaleConverter = new GrayScaleConverter()\n","/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n","'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\nconst styles = 'italic|oblique'\nconst variants = 'small-caps'\nconst stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\nconst units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\nconst string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp(`(${weights}) +`, 'i')\nconst styleRe = new RegExp(`(${styles}) +`, 'i')\nconst variantRe = new RegExp(`(${variants}) +`, 'i')\nconst stretchRe = new RegExp(`(${stretches}) +`, 'i')\nconst sizeFamilyRe = new RegExp(\n  `([\\\\d\\\\.]+)(${units}) *((?:${string})( *, *(?:${string}))*)`)\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = str => {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  const substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n","'use strict';\n\n\nconst assign        = require('object-assign');\nconst webworkify    = require('webworkify');\n\n\nconst MathLib       = require('./lib/mathlib');\nconst Pool          = require('./lib/pool');\nconst utils         = require('./lib/utils');\nconst worker        = require('./lib/worker');\nconst createStages  = require('./lib/stepper');\nconst createRegions = require('./lib/tiler');\nconst filter_info   = require('./lib/mm_resize/resize_filter_info');\n\n\n// Deduplicate pools & limiters with the same configs\n// when user creates multiple pica instances.\nconst singletones = {};\n\n\nlet NEED_SAFARI_FIX = false;\ntry {\n  if (typeof navigator !== 'undefined' && navigator.userAgent) {\n    NEED_SAFARI_FIX = navigator.userAgent.indexOf('Safari') >= 0;\n  }\n} catch (e) {}\n\n\nlet concurrency = 1;\nif (typeof navigator !== 'undefined') {\n  concurrency = Math.min(navigator.hardwareConcurrency || 1, 4);\n}\n\n\nconst DEFAULT_PICA_OPTS = {\n  tile: 1024,\n  concurrency,\n  features: [ 'js', 'wasm', 'ww' ],\n  idle: 2000,\n  createCanvas:  function (width, height) {\n    let tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width  = width;\n    tmpCanvas.height = height;\n    return tmpCanvas;\n  }\n};\n\n\nconst DEFAULT_RESIZE_OPTS = {\n  filter:           'mks2013',\n  unsharpAmount:    0,\n  unsharpRadius:    0.0,\n  unsharpThreshold: 0\n};\n\nlet CAN_NEW_IMAGE_DATA            = false;\nlet CAN_CREATE_IMAGE_BITMAP       = false;\nlet CAN_USE_CANVAS_GET_IMAGE_DATA = false;\nlet CAN_USE_OFFSCREEN_CANVAS      = false;\nlet CAN_USE_CIB_REGION_FOR_IMAGE  = false;\n\n\nfunction workerFabric() {\n  return {\n    value: webworkify(worker),\n    destroy: function () {\n      this.value.terminate();\n\n      if (typeof window !== 'undefined') {\n        let url = window.URL || window.webkitURL || window.mozURL || window.msURL;\n        if (url && url.revokeObjectURL && this.value.objectURL) {\n          url.revokeObjectURL(this.value.objectURL);\n        }\n      }\n    }\n  };\n}\n\n\n////////////////////////////////////////////////////////////////////////////////\n// API methods\n\nfunction Pica(options) {\n  if (!(this instanceof Pica)) return new Pica(options);\n\n  this.options = assign({}, DEFAULT_PICA_OPTS, options || {});\n\n  let limiter_key = `lk_${this.options.concurrency}`;\n\n  // Share limiters to avoid multiple parallel workers when user creates\n  // multiple pica instances.\n  this.__limit = singletones[limiter_key] || utils.limiter(this.options.concurrency);\n\n  if (!singletones[limiter_key]) singletones[limiter_key] = this.__limit;\n\n  // List of supported features, according to options & browser/node.js\n  this.features = {\n    js:   false, // pure JS implementation, can be disabled for testing\n    wasm: false, // webassembly implementation for heavy functions\n    cib:  false, // resize via createImageBitmap (only FF at this moment)\n    ww:   false  // webworkers\n  };\n\n  this.__workersPool = null;\n\n  // Store requested features for webworkers\n  this.__requested_features = [];\n\n  this.__mathlib = null;\n}\n\n\nPica.prototype.init = function () {\n  if (this.__initPromise) return this.__initPromise;\n\n  // Test if we can create ImageData without canvas and memory copy\n  if (typeof ImageData !== 'undefined' && typeof Uint8ClampedArray !== 'undefined') {\n    try {\n      /* eslint-disable no-new */\n      new ImageData(new Uint8ClampedArray(400), 10, 10);\n      CAN_NEW_IMAGE_DATA = true;\n    } catch (__) {}\n  }\n\n  // ImageBitmap can be effective in 2 places:\n  //\n  // 1. Threaded jpeg unpack (basic)\n  // 2. Built-in resize (blocked due problem in chrome, see issue #89)\n  //\n  // For basic use we also need ImageBitmap wo support .close() method,\n  // see https://developer.mozilla.org/ru/docs/Web/API/ImageBitmap\n\n  if (typeof ImageBitmap !== 'undefined') {\n    if (ImageBitmap.prototype && ImageBitmap.prototype.close) {\n      CAN_CREATE_IMAGE_BITMAP = true;\n    } else {\n      this.debug('ImageBitmap does not support .close(), disabled');\n    }\n  }\n\n\n  let features = this.options.features.slice();\n\n  if (features.indexOf('all') >= 0) {\n    features = [ 'cib', 'wasm', 'js', 'ww' ];\n  }\n\n  this.__requested_features = features;\n\n  this.__mathlib = new MathLib(features);\n\n  // Check WebWorker support if requested\n  if (features.indexOf('ww') >= 0) {\n    if ((typeof window !== 'undefined') && ('Worker' in window)) {\n      // IE <= 11 don't allow to create webworkers from string. We should check it.\n      // https://connect.microsoft.com/IE/feedback/details/801810/web-workers-from-blob-urls-in-ie-10-and-11\n      try {\n        let wkr = require('webworkify')(function () {});\n        wkr.terminate();\n        this.features.ww   = true;\n\n        // pool uniqueness depends on pool config + webworker config\n        let wpool_key = `wp_${JSON.stringify(this.options)}`;\n\n        if (singletones[wpool_key]) {\n          this.__workersPool = singletones[wpool_key];\n        } else {\n          this.__workersPool = new Pool(workerFabric, this.options.idle);\n          singletones[wpool_key] = this.__workersPool;\n        }\n      } catch (__) {}\n    }\n  }\n\n  let initMath = this.__mathlib.init().then(mathlib => {\n    // Copy detected features\n    assign(this.features, mathlib.features);\n  });\n\n  let checkCibResize;\n\n  if (!CAN_CREATE_IMAGE_BITMAP) {\n    checkCibResize = Promise.resolve(false);\n  } else {\n    checkCibResize = utils.cib_support(this.options.createCanvas).then(status => {\n      if (this.features.cib && features.indexOf('cib') < 0) {\n        this.debug('createImageBitmap() resize supported, but disabled by config');\n        return;\n      }\n\n      if (features.indexOf('cib') >= 0) this.features.cib = status;\n    });\n  }\n\n  CAN_USE_CANVAS_GET_IMAGE_DATA = utils.can_use_canvas(this.options.createCanvas);\n\n  let checkOffscreenCanvas;\n\n  if (CAN_CREATE_IMAGE_BITMAP && CAN_NEW_IMAGE_DATA && features.indexOf('ww') !== -1) {\n    checkOffscreenCanvas = utils.worker_offscreen_canvas_support();\n  } else {\n    checkOffscreenCanvas = Promise.resolve(false);\n  }\n\n  checkOffscreenCanvas = checkOffscreenCanvas.then(\n    result => { CAN_USE_OFFSCREEN_CANVAS = result; }\n  );\n\n  // we use createImageBitmap to crop image data and pass it to workers,\n  // so need to check whether function works correctly;\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1220671\n  let checkCibRegion = utils.cib_can_use_region().then(\n    result => { CAN_USE_CIB_REGION_FOR_IMAGE = result; }\n  );\n\n  // Init math lib. That's async because can load some\n  this.__initPromise = Promise.all([\n    initMath, checkCibResize, checkOffscreenCanvas, checkCibRegion\n  ]).then(() => this);\n\n  return this.__initPromise;\n};\n\n\n// Call resizer in webworker or locally, depending on config\nPica.prototype.__invokeResize = function (tileOpts, opts) {\n  // Share cache between calls:\n  //\n  // - wasm instance\n  // - wasm memory object\n  //\n  opts.__mathCache = opts.__mathCache || {};\n\n  return Promise.resolve().then(() => {\n    if (!this.features.ww) {\n      // not possible to have ImageBitmap here if user disabled WW\n      return { data: this.__mathlib.resizeAndUnsharp(tileOpts, opts.__mathCache) };\n    }\n\n    return new Promise((resolve, reject) => {\n      let w = this.__workersPool.acquire();\n\n      if (opts.cancelToken) opts.cancelToken.catch(err => reject(err));\n\n      w.value.onmessage = ev => {\n        w.release();\n\n        if (ev.data.err) reject(ev.data.err);\n        else resolve(ev.data);\n      };\n\n      let transfer = [];\n\n      if (tileOpts.src) transfer.push(tileOpts.src.buffer);\n      if (tileOpts.srcBitmap) transfer.push(tileOpts.srcBitmap);\n\n      w.value.postMessage({\n        opts: tileOpts,\n        features: this.__requested_features,\n        preload: {\n          wasm_nodule: this.__mathlib.__\n        }\n      }, transfer);\n    });\n  });\n};\n\n\n// this function can return promise if createImageBitmap is used\nPica.prototype.__extractTileData = function (tile, from, opts, stageEnv, extractTo) {\n  if (this.features.ww && CAN_USE_OFFSCREEN_CANVAS &&\n      // createImageBitmap doesn't work for images (Image, ImageBitmap) with Exif orientation in Chrome,\n      // can use canvas because canvas doesn't have orientation;\n      // see https://bugs.chromium.org/p/chromium/issues/detail?id=1220671\n      (utils.isCanvas(from) || CAN_USE_CIB_REGION_FOR_IMAGE)) {\n    this.debug('Create tile for OffscreenCanvas');\n\n    return createImageBitmap(stageEnv.srcImageBitmap || from, tile.x, tile.y, tile.width, tile.height)\n      .then(bitmap => {\n        extractTo.srcBitmap = bitmap;\n        return extractTo;\n      });\n  }\n\n  // Extract tile RGBA buffer, depending on input type\n  if (utils.isCanvas(from)) {\n    if (!stageEnv.srcCtx) stageEnv.srcCtx = from.getContext('2d');\n\n    // If input is Canvas - extract region data directly\n    this.debug('Get tile pixel data');\n    extractTo.src = stageEnv.srcCtx.getImageData(tile.x, tile.y, tile.width, tile.height).data;\n    return extractTo;\n  }\n\n  // If input is Image or decoded to ImageBitmap,\n  // draw region to temporary canvas and extract data from it\n  //\n  // Note! Attempt to reuse this canvas causes significant slowdown in chrome\n  //\n  this.debug('Draw tile imageBitmap/image to temporary canvas');\n\n  let tmpCanvas = this.options.createCanvas(tile.width, tile.height);\n\n  let tmpCtx = tmpCanvas.getContext('2d');\n  tmpCtx.globalCompositeOperation = 'copy';\n  tmpCtx.drawImage(stageEnv.srcImageBitmap || from,\n    tile.x, tile.y, tile.width, tile.height,\n    0, 0, tile.width, tile.height);\n\n  this.debug('Get tile pixel data');\n\n  extractTo.src = tmpCtx.getImageData(0, 0, tile.width, tile.height).data;\n\n  // Safari 12 workaround\n  // https://github.com/nodeca/pica/issues/199\n  tmpCanvas.width = tmpCanvas.height = 0;\n\n  return extractTo;\n};\n\n\nPica.prototype.__landTileData = function (tile, result, stageEnv) {\n  let toImageData;\n\n  this.debug('Convert raw rgba tile result to ImageData');\n\n  if (result.bitmap) {\n    stageEnv.toCtx.drawImage(result.bitmap, tile.toX, tile.toY);\n    return null;\n  }\n\n  if (CAN_NEW_IMAGE_DATA) {\n    // this branch is for modern browsers\n    // If `new ImageData()` & Uint8ClampedArray suported\n    toImageData = new ImageData(new Uint8ClampedArray(result.data), tile.toWidth, tile.toHeight);\n  } else {\n    // fallback for `node-canvas` and old browsers\n    // (IE11 has ImageData but does not support `new ImageData()`)\n    toImageData = stageEnv.toCtx.createImageData(tile.toWidth, tile.toHeight);\n\n    if (toImageData.data.set) {\n      toImageData.data.set(result.data);\n    } else {\n      // IE9 don't have `.set()`\n      for (let i = toImageData.data.length - 1; i >= 0; i--) {\n        toImageData.data[i] = result.data[i];\n      }\n    }\n  }\n\n  this.debug('Draw tile');\n\n  if (NEED_SAFARI_FIX) {\n    // Safari draws thin white stripes between tiles without this fix\n    stageEnv.toCtx.putImageData(toImageData, tile.toX, tile.toY,\n      tile.toInnerX - tile.toX, tile.toInnerY - tile.toY,\n      tile.toInnerWidth + 1e-5, tile.toInnerHeight + 1e-5);\n  } else {\n    stageEnv.toCtx.putImageData(toImageData, tile.toX, tile.toY,\n      tile.toInnerX - tile.toX, tile.toInnerY - tile.toY,\n      tile.toInnerWidth, tile.toInnerHeight);\n  }\n\n  return null;\n};\n\n\nPica.prototype.__tileAndResize = function (from, to, opts) {\n  let stageEnv = {\n    srcCtx: null,\n    srcImageBitmap: null,\n    isImageBitmapReused: false,\n    toCtx: null\n  };\n\n  const processTile = (tile => this.__limit(() => {\n    if (opts.canceled) return opts.cancelToken;\n\n    let tileOpts = {\n      width:            tile.width,\n      height:           tile.height,\n      toWidth:          tile.toWidth,\n      toHeight:         tile.toHeight,\n      scaleX:           tile.scaleX,\n      scaleY:           tile.scaleY,\n      offsetX:          tile.offsetX,\n      offsetY:          tile.offsetY,\n      filter:           opts.filter,\n      unsharpAmount:    opts.unsharpAmount,\n      unsharpRadius:    opts.unsharpRadius,\n      unsharpThreshold: opts.unsharpThreshold\n    };\n\n    this.debug('Invoke resize math');\n\n    return Promise.resolve(tileOpts)\n      .then(tileOpts => this.__extractTileData(tile, from, opts, stageEnv, tileOpts))\n      .then(tileOpts => {\n        this.debug('Invoke resize math');\n        return this.__invokeResize(tileOpts, opts);\n      })\n      .then(result => {\n        if (opts.canceled) return opts.cancelToken;\n        stageEnv.srcImageData = null;\n        return this.__landTileData(tile, result, stageEnv);\n      });\n  }));\n\n\n  // Need to normalize data source first. It can be canvas or image.\n  // If image - try to decode in background if possible\n  return Promise.resolve().then(() => {\n    stageEnv.toCtx = to.getContext('2d');\n\n    if (utils.isCanvas(from)) return null;\n\n    if (utils.isImageBitmap(from)) {\n      stageEnv.srcImageBitmap = from;\n      stageEnv.isImageBitmapReused = true;\n      return null;\n    }\n\n    if (utils.isImage(from)) {\n      // try do decode image in background for faster next operations;\n      // if we're using offscreen canvas, cib is called per tile, so not needed here\n      if (!CAN_CREATE_IMAGE_BITMAP) return null;\n\n      this.debug('Decode image via createImageBitmap');\n\n      return createImageBitmap(from)\n        .then(imageBitmap => {\n          stageEnv.srcImageBitmap = imageBitmap;\n        })\n        // Suppress error to use fallback, if method fails\n        // https://github.com/nodeca/pica/issues/190\n        /* eslint-disable no-unused-vars */\n        .catch(e => null);\n    }\n\n    throw new Error('Pica: \".from\" should be Image, Canvas or ImageBitmap');\n  })\n  .then(() => {\n    if (opts.canceled) return opts.cancelToken;\n\n    this.debug('Calculate tiles');\n\n    //\n    // Here we are with \"normalized\" source,\n    // follow to tiling\n    //\n\n    let regions = createRegions({\n      width:          opts.width,\n      height:         opts.height,\n      srcTileSize:    this.options.tile,\n      toWidth:        opts.toWidth,\n      toHeight:       opts.toHeight,\n      destTileBorder: opts.__destTileBorder\n    });\n\n    let jobs = regions.map(tile => processTile(tile));\n\n    function cleanup(stageEnv) {\n      if (stageEnv.srcImageBitmap) {\n        if (!stageEnv.isImageBitmapReused) stageEnv.srcImageBitmap.close();\n        stageEnv.srcImageBitmap = null;\n      }\n    }\n\n    this.debug('Process tiles');\n\n    return Promise.all(jobs).then(\n      () => {\n        this.debug('Finished!');\n        cleanup(stageEnv); return to;\n      },\n      err => { cleanup(stageEnv); throw err; }\n    );\n  });\n};\n\n\nPica.prototype.__processStages = function (stages, from, to, opts) {\n  if (opts.canceled) return opts.cancelToken;\n\n  let [ toWidth, toHeight ] = stages.shift();\n\n  let isLastStage = (stages.length === 0);\n\n  // Optimization for legacy filters -\n  // only use user-defined quality for the last stage,\n  // use simpler (Hamming) filter for the first stages where\n  // scale factor is large enough (more than 2-3)\n  //\n  // For advanced filters (mks2013 and custom) - skip optimization,\n  // because need to apply sharpening every time\n  let filter;\n\n  if (isLastStage || filter_info.q2f.indexOf(opts.filter) < 0) filter = opts.filter;\n  else if (opts.filter === 'box') filter = 'box';\n  else filter = 'hamming';\n\n  opts = assign({}, opts, {\n    toWidth,\n    toHeight,\n    filter\n  });\n\n  let tmpCanvas;\n\n  if (!isLastStage) {\n    // create temporary canvas\n    tmpCanvas = this.options.createCanvas(toWidth, toHeight);\n  }\n\n  return this.__tileAndResize(from, (isLastStage ? to : tmpCanvas), opts)\n    .then(() => {\n      if (isLastStage) return to;\n\n      opts.width = toWidth;\n      opts.height = toHeight;\n      return this.__processStages(stages, tmpCanvas, to, opts);\n    })\n    .then(res => {\n      if (tmpCanvas) {\n        // Safari 12 workaround\n        // https://github.com/nodeca/pica/issues/199\n        tmpCanvas.width = tmpCanvas.height = 0;\n      }\n\n      return res;\n    });\n};\n\n\nPica.prototype.__resizeViaCreateImageBitmap = function (from, to, opts) {\n  let toCtx = to.getContext('2d');\n\n  this.debug('Resize via createImageBitmap()');\n\n  return createImageBitmap(from, {\n    resizeWidth:   opts.toWidth,\n    resizeHeight:  opts.toHeight,\n    resizeQuality: utils.cib_quality_name(filter_info.f2q[opts.filter])\n  })\n  .then(imageBitmap => {\n    if (opts.canceled) return opts.cancelToken;\n\n    // if no unsharp - draw directly to output canvas\n    if (!opts.unsharpAmount) {\n      toCtx.drawImage(imageBitmap, 0, 0);\n      imageBitmap.close();\n      toCtx = null;\n\n      this.debug('Finished!');\n\n      return to;\n    }\n\n    this.debug('Unsharp result');\n\n    let tmpCanvas = this.options.createCanvas(opts.toWidth, opts.toHeight);\n\n    let tmpCtx = tmpCanvas.getContext('2d');\n\n    tmpCtx.drawImage(imageBitmap, 0, 0);\n    imageBitmap.close();\n\n    let iData = tmpCtx.getImageData(0, 0, opts.toWidth, opts.toHeight);\n\n    this.__mathlib.unsharp_mask(\n      iData.data,\n      opts.toWidth,\n      opts.toHeight,\n      opts.unsharpAmount,\n      opts.unsharpRadius,\n      opts.unsharpThreshold\n    );\n\n    toCtx.putImageData(iData, 0, 0);\n\n    // Safari 12 workaround\n    // https://github.com/nodeca/pica/issues/199\n    tmpCanvas.width = tmpCanvas.height = 0;\n\n    iData = tmpCtx = tmpCanvas = toCtx = null;\n\n    this.debug('Finished!');\n\n    return to;\n  });\n};\n\n\nPica.prototype.resize = function (from, to, options) {\n  this.debug('Start resize...');\n\n\n  let opts = assign({}, DEFAULT_RESIZE_OPTS);\n\n  if (!isNaN(options)) {\n    opts = assign(opts, { quality: options });\n  } else if (options) {\n    opts = assign(opts, options);\n  }\n\n  opts.toWidth  = to.width;\n  opts.toHeight = to.height;\n  opts.width    = from.naturalWidth || from.width;\n  opts.height   = from.naturalHeight || from.height;\n\n  // Legacy `.quality` option\n  if (Object.prototype.hasOwnProperty.call(opts, 'quality')) {\n    if (opts.quality < 0 || opts.quality > 3) {\n      throw new Error(`Pica: .quality should be [0..3], got ${opts.quality}`);\n    }\n    opts.filter = filter_info.q2f[opts.quality];\n  }\n\n  // Prevent stepper from infinite loop\n  if (to.width === 0 || to.height === 0) {\n    return Promise.reject(new Error(`Invalid output size: ${to.width}x${to.height}`));\n  }\n\n  if (opts.unsharpRadius > 2) opts.unsharpRadius = 2;\n\n  opts.canceled = false;\n\n  if (opts.cancelToken) {\n    // Wrap cancelToken to avoid successive resolve & set flag\n    opts.cancelToken = opts.cancelToken.then(\n      data => { opts.canceled = true; throw data; },\n      err  => { opts.canceled = true; throw err; }\n    );\n  }\n\n  let DEST_TILE_BORDER = 3; // Max possible filter window size\n  opts.__destTileBorder = Math.ceil(Math.max(DEST_TILE_BORDER, 2.5 * opts.unsharpRadius|0));\n\n  return this.init().then(() => {\n    if (opts.canceled) return opts.cancelToken;\n\n    // if createImageBitmap supports resize, just do it and return\n    if (this.features.cib) {\n      if (filter_info.q2f.indexOf(opts.filter) >= 0) {\n        return this.__resizeViaCreateImageBitmap(from, to, opts);\n      }\n\n      this.debug('cib is enabled, but not supports provided filter, fallback to manual math');\n    }\n\n    if (!CAN_USE_CANVAS_GET_IMAGE_DATA) {\n      let err = new Error('Pica: cannot use getImageData on canvas, ' +\n                          \"make sure fingerprinting protection isn't enabled\");\n      err.code = 'ERR_GET_IMAGE_DATA';\n      throw err;\n    }\n\n    //\n    // No easy way, let's resize manually via arrays\n    //\n\n    let stages = createStages(\n      opts.width,\n      opts.height,\n      opts.toWidth,\n      opts.toHeight,\n      this.options.tile,\n      opts.__destTileBorder\n    );\n\n    return this.__processStages(stages, from, to, opts);\n  });\n};\n\n// RGBA buffer resize\n//\nPica.prototype.resizeBuffer = function (options) {\n  const opts = assign({}, DEFAULT_RESIZE_OPTS, options);\n\n  // Legacy `.quality` option\n  if (Object.prototype.hasOwnProperty.call(opts, 'quality')) {\n    if (opts.quality < 0 || opts.quality > 3) {\n      throw new Error(`Pica: .quality should be [0..3], got ${opts.quality}`);\n    }\n    opts.filter = filter_info.q2f[opts.quality];\n  }\n\n  return this.init()\n    .then(() => this.__mathlib.resizeAndUnsharp(opts));\n};\n\n\nPica.prototype.toBlob = function (canvas, mimeType, quality) {\n  mimeType = mimeType || 'image/png';\n\n  return new Promise(resolve => {\n    if (canvas.toBlob) {\n      canvas.toBlob(blob => resolve(blob), mimeType, quality);\n      return;\n    }\n\n    if (canvas.convertToBlob) {\n      resolve(canvas.convertToBlob({\n        type: mimeType,\n        quality\n      }));\n      return;\n    }\n\n    // Fallback for old browsers\n    const asString = atob(canvas.toDataURL(mimeType, quality).split(',')[1]);\n    const len      = asString.length;\n    const asBuffer = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      asBuffer[i] = asString.charCodeAt(i);\n    }\n\n    resolve(new Blob([ asBuffer ], { type: mimeType }));\n  });\n};\n\n\nPica.prototype.debug = function () {};\n\n\nmodule.exports = Pica;\n","'use strict';\n\n\nconst GC_INTERVAL = 100;\n\n\nfunction Pool(create, idle) {\n  this.create = create;\n\n  this.available = [];\n  this.acquired = {};\n  this.lastId = 1;\n\n  this.timeoutId = 0;\n  this.idle = idle || 2000;\n}\n\n\nPool.prototype.acquire = function () {\n  let resource;\n\n  if (this.available.length !== 0) {\n    resource = this.available.pop();\n  } else {\n    resource = this.create();\n    resource.id = this.lastId++;\n    resource.release = () => this.release(resource);\n  }\n  this.acquired[resource.id] = resource;\n  return resource;\n};\n\n\nPool.prototype.release = function (resource) {\n  delete this.acquired[resource.id];\n\n  resource.lastUsed = Date.now();\n  this.available.push(resource);\n\n  if (this.timeoutId === 0) {\n    this.timeoutId = setTimeout(() => this.gc(), GC_INTERVAL);\n  }\n};\n\n\nPool.prototype.gc = function () {\n  const now = Date.now();\n\n  this.available = this.available.filter(resource => {\n    if (now - resource.lastUsed > this.idle) {\n      resource.destroy();\n      return false;\n    }\n    return true;\n  });\n\n  if (this.available.length !== 0) {\n    this.timeoutId = setTimeout(() => this.gc(), GC_INTERVAL);\n  } else {\n    this.timeoutId = 0;\n  }\n};\n\n\nmodule.exports = Pool;\n","'use strict';\n\n\nfunction objClass(obj) { return Object.prototype.toString.call(obj); }\n\n\nmodule.exports.isCanvas = function isCanvas(element) {\n  let cname = objClass(element);\n\n  return cname === '[object HTMLCanvasElement]'/* browser */ ||\n         cname === '[object OffscreenCanvas]' ||\n         cname === '[object Canvas]'/* node-canvas */;\n};\n\n\nmodule.exports.isImage = function isImage(element) {\n  return objClass(element) === '[object HTMLImageElement]';\n};\n\n\nmodule.exports.isImageBitmap = function isImageBitmap(element) {\n  return objClass(element) === '[object ImageBitmap]';\n};\n\n\nmodule.exports.limiter = function limiter(concurrency) {\n  let active = 0,\n      queue  = [];\n\n  function roll() {\n    if (active < concurrency && queue.length) {\n      active++;\n      queue.shift()();\n    }\n  }\n\n  return function limit(fn) {\n    return new Promise((resolve, reject) => {\n      queue.push(() => {\n        fn().then(\n          result => {\n            resolve(result);\n            active--;\n            roll();\n          },\n          err => {\n            reject(err);\n            active--;\n            roll();\n          }\n        );\n      });\n\n      roll();\n    });\n  };\n};\n\n\nmodule.exports.cib_quality_name = function cib_quality_name(num) {\n  switch (num) {\n    case 0: return 'pixelated';\n    case 1: return 'low';\n    case 2: return 'medium';\n  }\n  return 'high';\n};\n\n\nmodule.exports.cib_support = function cib_support(createCanvas) {\n  return Promise.resolve().then(() => {\n    if (typeof createImageBitmap === 'undefined') {\n      return false;\n    }\n\n    let c = createCanvas(100, 100);\n\n    return createImageBitmap(c, 0, 0, 100, 100, {\n      resizeWidth: 10,\n      resizeHeight: 10,\n      resizeQuality: 'high'\n    })\n    .then(bitmap => {\n      let status = (bitmap.width === 10);\n\n      // Branch below is filtered on upper level. We do not call resize\n      // detection for basic ImageBitmap.\n      //\n      // https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap\n      // old Crome 51 has ImageBitmap without .close(). Then this code\n      // will throw and return 'false' as expected.\n      //\n      bitmap.close();\n      c = null;\n      return status;\n    });\n  })\n  .catch(() => false);\n};\n\n\nmodule.exports.worker_offscreen_canvas_support = function worker_offscreen_canvas_support() {\n  return new Promise((resolve, reject) => {\n    if (typeof OffscreenCanvas === 'undefined') {\n      // if OffscreenCanvas is present, we assume browser supports Worker and built-in Promise as well\n      resolve(false);\n      return;\n    }\n\n    function workerPayload(self) {\n      if (typeof createImageBitmap === 'undefined') {\n        self.postMessage(false);\n        return;\n      }\n\n      Promise.resolve()\n        .then(() => {\n          let canvas = new OffscreenCanvas(10, 10);\n          // test that 2d context can be used in worker\n          let ctx = canvas.getContext('2d');\n          ctx.rect(0, 0, 1, 1);\n          // test that cib can be used to return image bitmap from worker\n          return createImageBitmap(canvas, 0, 0, 1, 1);\n        })\n        .then(\n          () => self.postMessage(true),\n          () => self.postMessage(false)\n        );\n    }\n\n    let code = btoa(`(${workerPayload.toString()})(self);`);\n    let w = new Worker(`data:text/javascript;base64,${code}`);\n    w.onmessage = ev => resolve(ev.data);\n    w.onerror = reject;\n  }).then(result => result, () => false);\n};\n\n\n// Check if canvas.getContext('2d').getImageData can be used,\n// FireFox randomizes the output of that function in `privacy.resistFingerprinting` mode\nmodule.exports.can_use_canvas = function can_use_canvas(createCanvas) {\n  let usable = false;\n  try {\n    let canvas = createCanvas(2, 1);\n    let ctx = canvas.getContext('2d');\n\n    let d = ctx.createImageData(2, 1);\n    d.data[0] = 12; d.data[1] = 23; d.data[2] = 34; d.data[3] = 255;\n    d.data[4] = 45; d.data[5] = 56; d.data[6] = 67; d.data[7] = 255;\n    ctx.putImageData(d, 0, 0);\n    d = null;\n\n    d = ctx.getImageData(0, 0, 2, 1);\n\n    if (d.data[0] === 12 && d.data[1] === 23 && d.data[2] === 34 && d.data[3] === 255 &&\n        d.data[4] === 45 && d.data[5] === 56 && d.data[6] === 67 && d.data[7] === 255) {\n      usable = true;\n    }\n  } catch (err) {}\n\n  return usable;\n};\n\n\n// Check if createImageBitmap(img, sx, sy, sw, sh) signature works correctly\n// with JPEG images oriented with Exif;\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1220671\n// TODO: remove after it's fixed in chrome for at least 2 releases\nmodule.exports.cib_can_use_region = function cib_can_use_region() {\n  return new Promise(resolve => {\n    // `Image` check required for use in `ServiceWorker`\n    if ((typeof Image === 'undefined') || (typeof createImageBitmap === 'undefined')) {\n      resolve(false);\n      return;\n    }\n\n    let image = new Image();\n    image.src = 'data:image/jpeg;base64,' +\n      '/9j/4QBiRXhpZgAATU0AKgAAAAgABQESAAMAAAABAAYAAAEaAAUAAAABAAAASgEbAAUAA' +\n      'AABAAAAUgEoAAMAAAABAAIAAAITAAMAAAABAAEAAAAAAAAAAABIAAAAAQAAAEgAAAAB/9' +\n      'sAQwAEAwMEAwMEBAMEBQQEBQYKBwYGBgYNCQoICg8NEBAPDQ8OERMYFBESFxIODxUcFRc' +\n      'ZGRsbGxAUHR8dGh8YGhsa/9sAQwEEBQUGBQYMBwcMGhEPERoaGhoaGhoaGhoaGhoaGhoa' +\n      'GhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoa/8IAEQgAAQACAwERAAIRAQMRA' +\n      'f/EABQAAQAAAAAAAAAAAAAAAAAAAAf/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAA' +\n      'IQAxAAAAF/P//EABQQAQAAAAAAAAAAAAAAAAAAAAD/2gAIAQEAAQUCf//EABQRAQAAAAA' +\n      'AAAAAAAAAAAAAAAD/2gAIAQMBAT8Bf//EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAIAQIB' +\n      'AT8Bf//EABQQAQAAAAAAAAAAAAAAAAAAAAD/2gAIAQEABj8Cf//EABQQAQAAAAAAAAAAA' +\n      'AAAAAAAAAD/2gAIAQEAAT8hf//aAAwDAQACAAMAAAAQH//EABQRAQAAAAAAAAAAAAAAAA' +\n      'AAAAD/2gAIAQMBAT8Qf//EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAIAQIBAT8Qf//EABQ' +\n      'QAQAAAAAAAAAAAAAAAAAAAAD/2gAIAQEAAT8Qf//Z';\n\n    image.onload = () => {\n      createImageBitmap(image, 0, 0, image.width, image.height).then(bitmap => {\n        if (bitmap.width === image.width && bitmap.height === image.height) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      }, () => resolve(false));\n    };\n\n    image.onerror = () => resolve(false);\n  });\n};\n","// Web Worker wrapper for image resize function\n\n'use strict';\n\nmodule.exports = function () {\n  const MathLib = require('./mathlib');\n\n  let mathLib;\n\n  /* eslint-disable no-undef */\n  onmessage = function (ev) {\n    let tileOpts = ev.data.opts;\n    let returnBitmap = false;\n\n    if (!tileOpts.src && tileOpts.srcBitmap) {\n      let canvas = new OffscreenCanvas(tileOpts.width, tileOpts.height);\n      let ctx = canvas.getContext('2d');\n      ctx.drawImage(tileOpts.srcBitmap, 0, 0);\n      tileOpts.src = ctx.getImageData(0, 0, tileOpts.width, tileOpts.height).data;\n      canvas.width = canvas.height = 0;\n      canvas = null;\n      tileOpts.srcBitmap.close();\n      tileOpts.srcBitmap = null;\n      // Temporary force out data to typed array, because Chrome have artefacts\n      // https://github.com/nodeca/pica/issues/223\n      // returnBitmap = true;\n    }\n\n    if (!mathLib) mathLib = new MathLib(ev.data.features);\n\n    // Use multimath's sync auto-init. Avoid Promise use in old browsers,\n    // because polyfills are not propagated to webworker.\n    let data = mathLib.resizeAndUnsharp(tileOpts);\n\n    if (returnBitmap) {\n      let toImageData = new ImageData(new Uint8ClampedArray(data), tileOpts.toWidth, tileOpts.toHeight);\n      let canvas = new OffscreenCanvas(tileOpts.toWidth, tileOpts.toHeight);\n      let ctx = canvas.getContext('2d');\n\n      ctx.putImageData(toImageData, 0, 0);\n\n      createImageBitmap(canvas).then(bitmap => {\n        postMessage({ bitmap }, [ bitmap ]);\n      });\n    } else {\n      postMessage({ data }, [ data.buffer ]);\n    }\n  };\n};\n","// Add intermediate resizing steps when scaling down by a very large factor.\n//\n// For example, when resizing 10000x10000 down to 10x10, it'll resize it to\n// 300x300 first.\n//\n// It's needed because tiler has issues when the entire tile is scaled down\n// to a few pixels (1024px source tile with border size 3 should result in\n// at least 3+3+2 = 8px target tile, so max scale factor is 128 here).\n//\n// Also, adding intermediate steps can speed up processing if we use lower\n// quality algorithms for first stages.\n//\n\n'use strict';\n\n\n// min size = 0 results in infinite loop,\n// min size = 1 can consume large amount of memory\nconst MIN_INNER_TILE_SIZE = 2;\n\n\nmodule.exports = function createStages(fromWidth, fromHeight, toWidth, toHeight, srcTileSize, destTileBorder) {\n  let scaleX = toWidth / fromWidth;\n  let scaleY = toHeight / fromHeight;\n\n  // derived from createRegions equation:\n  // innerTileWidth = pixelFloor(srcTileSize * scaleX) - 2 * destTileBorder;\n  let minScale = (2 * destTileBorder + MIN_INNER_TILE_SIZE + 1) / srcTileSize;\n\n  // refuse to scale image multiple times by less than twice each time,\n  // it could only happen because of invalid options\n  if (minScale > 0.5) return [ [ toWidth, toHeight ] ];\n\n  let stageCount = Math.ceil(Math.log(Math.min(scaleX, scaleY)) / Math.log(minScale));\n\n  // no additional resizes are necessary,\n  // stageCount can be zero or be negative when enlarging the image\n  if (stageCount <= 1) return [ [ toWidth, toHeight ] ];\n\n  let result = [];\n\n  for (let i = 0; i < stageCount; i++) {\n    let width = Math.round(\n      Math.pow(\n        Math.pow(fromWidth, stageCount - i - 1) * Math.pow(toWidth, i + 1),\n        1 / stageCount\n      )\n    );\n\n    let height = Math.round(\n      Math.pow(\n        Math.pow(fromHeight, stageCount - i - 1) * Math.pow(toHeight, i + 1),\n        1 / stageCount\n      )\n    );\n\n    result.push([ width, height ]);\n  }\n\n  return result;\n};\n","// Split original image into multiple 1024x1024 chunks to reduce memory usage\n// (images have to be unpacked into typed arrays for resizing) and allow\n// parallel processing of multiple tiles at a time.\n//\n\n'use strict';\n\n/*\n * pixelFloor and pixelCeil are modified versions of Math.floor and Math.ceil\n * functions which take into account floating point arithmetic errors.\n * Those errors can cause undesired increments/decrements of sizes and offsets:\n * Math.ceil(36 / (36 / 500)) = 501\n * pixelCeil(36 / (36 / 500)) = 500\n */\n\nvar PIXEL_EPSILON = 1e-5;\n\nfunction pixelFloor(x) {\n  var nearest = Math.round(x);\n\n  if (Math.abs(x - nearest) < PIXEL_EPSILON) { return nearest; }\n  return Math.floor(x);\n}\n\nfunction pixelCeil(x) {\n  var nearest = Math.round(x);\n\n  if (Math.abs(x - nearest) < PIXEL_EPSILON) { return nearest; }\n  return Math.ceil(x);\n}\n\n\nmodule.exports = function createRegions(options) {\n  var scaleX = options.toWidth / options.width;\n  var scaleY = options.toHeight / options.height;\n\n  var innerTileWidth = pixelFloor(options.srcTileSize * scaleX) - 2 * options.destTileBorder;\n  var innerTileHeight = pixelFloor(options.srcTileSize * scaleY) - 2 * options.destTileBorder;\n\n  // prevent infinite loop, this should never happen\n  if (innerTileWidth < 1 || innerTileHeight < 1) {\n    throw new Error('Internal error in pica: target tile width/height is too small.');\n  }\n\n  var x, y;\n  var innerX, innerY, toTileWidth, toTileHeight;\n  var tiles = [];\n  var tile;\n\n  // we go top-to-down instead of left-to-right to make image displayed from top to\n  // doesn in the browser\n  for (innerY = 0; innerY < options.toHeight; innerY += innerTileHeight) {\n    for (innerX = 0; innerX < options.toWidth; innerX += innerTileWidth) {\n      x = innerX - options.destTileBorder;\n      if (x < 0) { x = 0; }\n      toTileWidth = innerX + innerTileWidth + options.destTileBorder - x;\n      if (x + toTileWidth >= options.toWidth) {\n        toTileWidth = options.toWidth - x;\n      }\n\n      y = innerY - options.destTileBorder;\n      if (y < 0) { y = 0; }\n      toTileHeight = innerY + innerTileHeight + options.destTileBorder - y;\n      if (y + toTileHeight >= options.toHeight) {\n        toTileHeight = options.toHeight - y;\n      }\n\n      tile = {\n        toX: x,\n        toY: y,\n        toWidth: toTileWidth,\n        toHeight: toTileHeight,\n\n        toInnerX: innerX,\n        toInnerY: innerY,\n        toInnerWidth: innerTileWidth,\n        toInnerHeight: innerTileHeight,\n\n        offsetX: x / scaleX - pixelFloor(x / scaleX),\n        offsetY: y / scaleY - pixelFloor(y / scaleY),\n        scaleX: scaleX,\n        scaleY: scaleY,\n\n        x: pixelFloor(x / scaleX),\n        y: pixelFloor(y / scaleY),\n        width: pixelCeil(toTileWidth / scaleX),\n        height: pixelCeil(toTileHeight / scaleY)\n      };\n\n      tiles.push(tile);\n    }\n  }\n\n  return tiles;\n};\n","export class ImageHash {\n\n    binArray;\n\n    /**\n     * @param binArray {Uint8ClampedArray}\n     */\n    constructor(binArray) {\n        this.binArray = binArray;\n    }\n\n    static fromBase64(s) {\n        const buf = atob(s);\n        const arr = new Uint8ClampedArray(buf.length * 8);\n\n        for (let i = 0; i < buf.length; i++) {\n            const c = buf.charCodeAt(i);\n            arr[i * 8] = (c & 0x01);\n            arr[i * 8 + 1] = (c & 0x02) >> 1;\n            arr[i * 8 + 2] = (c & 0x04) >> 2;\n            arr[i * 8 + 3] = (c & 0x08) >> 3;\n            arr[i * 8 + 4] = (c & 0x10) >> 4;\n            arr[i * 8 + 5] = (c & 0x20) >> 5;\n            arr[i * 8 + 6] = (c & 0x40) >> 6;\n            arr[i * 8 + 7] = (c & 0x80) >> 7;\n        }\n\n        return new ImageHash(arr);\n    }\n\n    static fromHexStringReversed(s) {\n        if (s.length % 2 !== 0) {\n            throw Error(\"hex string length must be a multiple of 2\");\n        }\n        const arr = new Uint8ClampedArray(s.length * 4);\n\n        for (let i = 0; i < s.length; i += 2) {\n            const c = Number.parseInt(s.slice(i, i + 2), 16);\n\n            if (Number.isNaN(c)) {\n                throw Error(\"Invalid hex string\");\n            }\n\n            arr[i * 4] = (c & 0x80) >> 7;\n            arr[i * 4 + 1] = (c & 0x40) >> 6;\n            arr[i * 4 + 2] = (c & 0x20) >> 5;\n            arr[i * 4 + 3] = (c & 0x10) >> 4;\n            arr[i * 4 + 4] = (c & 0x08) >> 3;\n            arr[i * 4 + 5] = (c & 0x04) >> 2;\n            arr[i * 4 + 6] = (c & 0x02) >> 1;\n            arr[i * 4 + 7] = (c & 0x01);\n        }\n\n        return new ImageHash(arr);\n    }\n\n    static fromHexString(s) {\n        if (s.length % 2 !== 0) {\n            throw Error(\"hex string length must be a multiple of 2\");\n        }\n        const arr = new Uint8ClampedArray(s.length * 4);\n\n        for (let i = 0; i < s.length; i += 2) {\n            const c = Number.parseInt(s.slice(i, i + 2), 16);\n\n            if (Number.isNaN(c)) {\n                throw Error(\"Invalid hex string\");\n            }\n\n            arr[i * 4] = (c & 0x01);\n            arr[i * 4 + 1] = (c & 0x02) >> 1;\n            arr[i * 4 + 2] = (c & 0x04) >> 2;\n            arr[i * 4 + 3] = (c & 0x08) >> 3;\n            arr[i * 4 + 4] = (c & 0x10) >> 4;\n            arr[i * 4 + 5] = (c & 0x20) >> 5;\n            arr[i * 4 + 6] = (c & 0x40) >> 6;\n            arr[i * 4 + 7] = (c & 0x80) >> 7;\n        }\n\n        return new ImageHash(arr);\n    }\n\n    toHexStringReversed() {\n        let str = \"\";\n\n        for (let i = 0; i < this.binArray.length; i += 8) {\n            const c =\n                this.binArray[i] << 7 |\n                this.binArray[i + 1] << 6 |\n                this.binArray[i + 2] << 5 |\n                this.binArray[i + 3] << 4 |\n                this.binArray[i + 4] << 3 |\n                this.binArray[i + 5] << 2 |\n                this.binArray[i + 6] << 1 |\n                this.binArray[i + 7];\n\n            str += c.toString(16).padStart(2, \"0\");\n        }\n\n        return str;\n    }\n\n    toHexString() {\n        let str = \"\";\n\n        for (let i = 0; i < this.binArray.length; i += 8) {\n            const c =\n                this.binArray[i] |\n                this.binArray[i + 1] << 1 |\n                this.binArray[i + 2] << 2 |\n                this.binArray[i + 3] << 3 |\n                this.binArray[i + 4] << 4 |\n                this.binArray[i + 5] << 5 |\n                this.binArray[i + 6] << 6 |\n                this.binArray[i + 7] << 7;\n\n            str += c.toString(16).padStart(2, \"0\");\n        }\n\n        return str;\n    }\n\n    toBase64() {\n        let buf = [];\n\n        for (let i = 0; i < this.binArray.length; i += 8) {\n            buf.push(this.binArray[i] |\n                this.binArray[i + 1] << 1 |\n                this.binArray[i + 2] << 2 |\n                this.binArray[i + 3] << 3 |\n                this.binArray[i + 4] << 4 |\n                this.binArray[i + 5] << 5 |\n                this.binArray[i + 6] << 6 |\n                this.binArray[i + 7] << 7)\n        }\n\n        return btoa(String.fromCharCode(...new Uint8Array(buf)));\n    }\n\n    /**\n     * @param hash {ImageHash}\n     * @returns number\n     */\n    hammingDistance(hash) {\n        if (hash.binArray.length !== this.binArray.length) {\n            throw new Error(\"Cannot compare two ImageHash instances of different sizes\");\n        }\n\n        let distance = 0;\n        for (let i = 0; i < this.binArray.length; i++) {\n            if (this.binArray[i] !== hash.binArray[i]) {\n                distance += 1;\n            }\n        }\n\n        return distance;\n    }\n}\n\nexport class ImageMultiHash {\n\n    constructor(hashes) {\n        this.segmentHashes = hashes;\n    }\n\n    toJSON() {\n        return this.segmentHashes.map(h => h.toHexString());\n    }\n\n    static fromJSON(json) {\n        return new ImageMultiHash(json.map(s => ImageHash.fromHexString(s)));\n    }\n\n    /**\n     * @param hash {ImageMultiHash}\n     * @param hammingCutoff {number}\n     * @return {sum: number, num: number}\n     */\n    hashDiff(hash, hammingCutoff) {\n        let sum = 0;\n        let num = 0;\n\n        for (let i = 0; i < hash.segmentHashes.length; i++) {\n\n            const distances = [];\n\n            for (let j = 0; j < this.segmentHashes.length; j++) {\n                distances.push(hash.segmentHashes[i].hammingDistance(this.segmentHashes[j]));\n            }\n\n            const minDistance = Math.min(...distances);\n            if (minDistance <= hammingCutoff) {\n                sum += minDistance;\n                num += 1;\n            }\n        }\n\n        return {num, sum};\n    }\n}","import {canvasUtil, grayScaleConverter} from \"./imageUtils.js\";\nimport {ImageHash} from \"./hash.js\";\n\n/**\n * @param image {Image}\n * @param size {number}\n */\nexport async function dhash(image, size = 8) {\n\n    const pixels = grayScaleConverter.convert(await canvasUtil.resizeImageAndGetData(image, size + 1, size));\n\n    const hash = new Uint8ClampedArray(size * size);\n    const nRows = size;\n    const nCols = size + 1;\n\n    let offset = 0;\n    for (let i = 0; i < nRows; i++) {\n        for (let j = 1; j < nCols; j++) {\n            hash[offset++] = pixels[i * nCols + j] > pixels[i * nCols + j - 1];\n        }\n    }\n\n    return new ImageHash(hash);\n}","import {canvasUtil, grayScaleConverter} from \"./imageUtils.js\";\nimport {ImageHash} from \"./hash.js\";\n\nconst cosCache = {};\n\nfunction precomputeCos(L) {\n    if (L in cosCache) {\n        return cosCache[L];\n    }\n\n    const piOver2L = Math.PI / (2 * L)\n\n    const cos = {};\n\n    for (let u = 0; u < L; u++) {\n        const uTimesPiOver2L = u * piOver2L;\n        for (let x = 0; x < L; x++) {\n            cos[(u << 8) + x] = Math.cos((2 * x + 1) * uTimesPiOver2L);\n        }\n    }\n\n    cosCache[L] = cos;\n\n    return cos;\n}\n\n/**\n * 2D DCT-II\n * @param matrix Must be a square matrix\n * @return {Array}\n */\nfunction dctTransform(matrix) {\n\n    const L = Math.round(Math.sqrt(matrix.length));\n\n    const cos = precomputeCos(L);\n    const dct = new Array(L * L);\n\n    let _u, _v, sum;\n\n    for (let u = 0; u < L; u++) {\n        for (let v = 0; v < L; v++) {\n            sum = 0;\n\n            _u = u << 8;\n            _v = v << 8;\n\n            for (let x = 0; x < L; x++) {\n                for (let y = 0; y < L; y++) {\n                    sum += matrix[x * L + y] * cos[_u + x] * cos[_v + y];\n                }\n            }\n\n            dct[u * L + v] = sum;\n        }\n    }\n\n    return dct\n}\n\n\nfunction median(values) {\n    values.sort((a, b) => a - b);\n    return values[Math.floor(values.length / 2)];\n}\n\n/**\n * @param image {Image}\n * @param size {number}\n * @param highFrequencyFactor {number}\n */\nexport async function phash(image, size = 8, highFrequencyFactor = 4) {\n    const imageSize = size * highFrequencyFactor;\n\n    const pixels = grayScaleConverter.convert(await canvasUtil.resizeImageAndGetData(image, imageSize, imageSize));\n\n    const dctOut = dctTransform(pixels);\n\n    const dctLowFreq = new Float64Array(size * size)\n    const sorted = new Float64Array(size * size)\n\n    let ptrLow = 0;\n    let ptr = 0;\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < size; j++) {\n            dctLowFreq[ptrLow] = dctOut[ptr];\n            sorted[ptrLow] = dctOut[ptr];\n            ptrLow += 1;\n            ptr += 1;\n        }\n        ptr += imageSize - size;\n    }\n\n    let sum = 0;\n    for (let i = 0; i < dctLowFreq.length; i++) {\n        sum += dctLowFreq[i];\n    }\n    const med = median(sorted);\n\n    const hash = new Uint8ClampedArray(size * size);\n\n    for (let i = 0; i < hash.length; ++i) {\n        hash[i] = dctLowFreq[i] > med;\n    }\n\n    return new ImageHash(hash);\n}","import {Image} from \"canvas\";\nimport {canvasUtil, grayScaleConverter} from \"./imageUtils.js\";\nimport {ImageHash} from \"./hash.js\";\n\nconst HaarWavelet = [\n    1 / Math.SQRT2,\n    1 / Math.SQRT2\n];\n\nfunction waveletFromScalingNumbers(scalingNumbers) {\n\n    const waveletNumbers = scalingNumbers\n        .slice()\n        .reverse()\n        .map((value, index) => (index % 2 === 0) ? value : -value);\n\n    return {\n        dec: {\n            low: scalingNumbers.slice(),\n            high: waveletNumbers.slice(),\n        },\n        rec: {\n            low: scalingNumbers.slice(),\n            high: waveletNumbers.slice()\n        },\n    };\n}\n\nconst HaarBasis = waveletFromScalingNumbers(HaarWavelet);\n\nfunction getBasis(wavelet) {\n    if (wavelet === \"haar\") {\n        return HaarBasis;\n    }\n\n    throw new Error(\"Invalid wavelet\");\n}\n\nfunction dot(a, b) {\n    /* Calculate dot product. */\n    return a.reduce((dot, value, index) => dot + value * b[index], 0);\n}\n\nfunction add(a, b) {\n    /* Calculate element-wise sum. */\n    return a.map((value, index) => value + b[index]);\n}\n\nfunction mulScalar(scalar, array) {\n    return array.map(value => scalar * value);\n}\n\n\nfunction dwt(data, wavelet) {\n    const waveletBasis = getBasis(wavelet);\n    const filters = waveletBasis.dec;\n    const filterLength = filters.low.length;\n\n    let approx = [];\n    let detail = [];\n\n    /* Calculate coefficients. */\n    for (let offset = 0; offset + filterLength <= data.length; offset += 2) {\n        const values = data.slice(offset, offset + filterLength);\n\n        approx.push(dot(values, filters.low));\n        detail.push(dot(values, filters.high));\n    }\n\n    return [approx, detail];\n}\n\nfunction idwt(approx, detail, waveletBasis) {\n    const filters = waveletBasis.rec;\n    const filterLength = filters.low.length;\n\n    /* Initialize transform. */\n    const coeffLength = approx.length;\n    let pad = new Array(filterLength + (coeffLength - 1) * 2);\n    pad.fill(0);\n\n    /* Perform inverse Discrete Wavelet Transform. */\n    for (let i = 0; i < coeffLength; i++) {\n        const offset = 2 * i;\n\n        /* Calculate values. */\n        let values = pad.slice(offset, offset + filterLength);\n        values = add(values, mulScalar(approx[i], filters.low));\n        values = add(values, mulScalar(detail[i], filters.high));\n\n        /* Update values. */\n        pad = pad\n            .slice(0, offset)\n            .concat(values)\n            .concat(pad.slice(offset + values.length));\n    }\n\n    /* Remove padding. */\n    return pad.slice(filterLength - 2, pad.length - (filterLength - 2));\n}\n\n\nfunction wavedec(data, wavelet, level) {\n    /*  Initialize transform. */\n    let coeffs = [];\n    let approx = data.slice();\n\n    /* Transform. */\n    for (let i = 0; i < level; i++) {\n        /* Perform single level transform. */\n        const approxDetail = dwt(approx, wavelet);\n        approx = approxDetail[0];\n\n        /* Prepend detail coefficients. */\n        coeffs.unshift(approxDetail[1].slice());\n    }\n\n    /* Prepend last approximation. */\n    coeffs.unshift(approx.slice());\n\n    return coeffs;\n}\n\nfunction waverec(coeffs, wavelet) {\n    wavelet = getBasis(wavelet)\n\n    let approx = coeffs[0];\n\n    for (let i = 1; i < coeffs.length; i++) {\n        const detail = coeffs[i];\n\n        if (approx.length === detail.length + 1) {\n            approx = approx.slice(0, approx.length - 1);\n        }\n\n        approx = idwt(approx, detail, wavelet);\n    }\n\n    return approx.slice();\n}\n\n\nfunction median(values) {\n    values.sort((a, b) => a - b);\n    return values[Math.floor(values.length / 2)];\n}\n\nfunction wavedec2(data, wavelet, level) {\n    const L = Math.round(Math.sqrt(data.length));\n\n    const rows = new Array(L);\n\n    for (let y = 0; y < L; y++) {\n        const row = new Array(L);\n\n        for (let x = 0; x < L; x++) {\n            row[x] = data[y * L + x];\n        }\n\n        rows[y] = row;\n    }\n\n    const cols = new Array(L);\n    for (let i = 0; i < L; i++) {\n        cols[i] = new Array(L);\n    }\n\n    // Rows\n    for (let y = 0; y < L; y++) {\n        const coeffs = wavedec(rows[y], \"haar\", level).flat();\n        for (let x = 0; x < L; x++) {\n            cols[x][y] = coeffs[x];\n        }\n    }\n\n    const result = new Array(L * L);\n\n    // Cols\n    for (let x = 0; x < L; x++) {\n        const coeffs = wavedec(cols[x], \"haar\", level).flat();\n\n        for (let y = 0; y < L; y++) {\n            result[y * L + x] = coeffs[y];\n        }\n    }\n\n    return result;\n}\n\nfunction unflatten(data, level) {\n    const result = [];\n\n    const sizes = [];\n\n    let n = data.length;\n    for (let i = 0; i < level; i++) {\n        n /= 2;\n        sizes.unshift(n)\n    }\n    sizes.unshift(n);\n\n    let cur = 0;\n    for (let i = 0; i < sizes.length; i++) {\n        result.push(data.slice(cur, cur + sizes[i]));\n        cur += sizes[i];\n    }\n\n    return result;\n}\n\nfunction waverec2(data, wavelet, level) {\n    const L = Math.round(Math.sqrt(data.length));\n\n    const cols = new Array(L);\n\n    for (let x = 0; x < L; x++) {\n        const col = new Array(L);\n\n        for (let y = 0; y < L; y++) {\n            col[y] = data[y * L + x];\n        }\n\n        cols[x] = col;\n    }\n\n    const rows = new Array(L);\n    for (let i = 0; i < L; i++) {\n        rows[i] = new Array(L);\n    }\n\n    // Cols\n    for (let x = 0; x < L; x++) {\n        const rec = waverec(unflatten(cols[x], level), \"haar\")\n\n        for (let y = 0; y < L; y++) {\n            rows[y][x] = rec[y];\n        }\n    }\n\n    const result = new Array(L * L);\n\n    // Rows\n    for (let y = 0; y < L; y++) {\n        const rec = waverec(unflatten(rows[y], level), \"haar\");\n        for (let x = 0; x < L; x++) {\n            result[y * L + x] = rec[x];\n        }\n    }\n\n    return result;\n}\n\n/**\n * @param image {Image}\n * @param size {number}\n * @param removeMaxHaarLL {boolean}\n */\nexport async function whash(image, size = 8, removeMaxHaarLL = true) {\n\n    const imageNaturalScale = 2 ** Math.floor(Math.log2(Math.min(image.naturalWidth, image.naturalHeight)))\n    const imageSize = Math.max(imageNaturalScale, size)\n\n    const llMaxLevel = Math.floor(Math.log2(imageSize))\n\n    const level = Math.floor(Math.log2(size))\n    const dwtLevel = llMaxLevel - level\n\n    const pixels = grayScaleConverter.convert(await canvasUtil.resizeImageAndGetData(image, imageSize, imageSize));\n    let data = new Array(pixels.length);\n\n    for (let i = 0; i < pixels.length; i++) {\n        data[i] = pixels[i] / 255;\n    }\n\n    if (removeMaxHaarLL) {\n        const coeffs = wavedec2(data, \"haar\", llMaxLevel);\n        coeffs[0] = 0;\n        data = waverec2(coeffs, \"haar\", llMaxLevel)\n    }\n\n    const result = wavedec2(data, \"haar\", dwtLevel);\n    const ll = new Float64Array(size * size);\n    const sorted = new Float64Array(size * size);\n\n    let ptr = 0;\n    let ptrLow = 0;\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < size; j++) {\n            ll[ptrLow] = result[ptr];\n            sorted[ptrLow] = result[ptr];\n            ptr += 1;\n            ptrLow += 1;\n        }\n        ptr += imageSize - size;\n    }\n\n    const hash = new Uint8ClampedArray(size * size);\n    const med = median(sorted);\n\n    for (let i = 0; i < hash.length; i++) {\n        hash[i] = ll[i] > med;\n    }\n\n    return new ImageHash(hash)\n}\n","import {canvasUtil, grayScaleConverter} from \"./imageUtils.js\";\nimport {boxBlur} from \"./blur.js\";\nimport {dhash} from \"./dhash.js\";\nimport {ImageMultiHash} from \"./hash.js\";\nimport {createCanvas, ImageData} from \"canvas\";\nimport * as fs from \"fs\";\n\n\nfunction debugSaveImage(pixels, filename, width, height) {\n\n    const rgba = new Uint8ClampedArray(width * height * 4);\n\n    let cur = 0;\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const val = pixels[y * height + x]\n            rgba[cur++] = val;\n            rgba[cur++] = val;\n            rgba[cur++] = val;\n            rgba[cur++] = 255;\n        }\n    }\n\n    const canvas = createCanvas(width, height);\n    const ctx = canvas.getContext(\"2d\");\n    const imgData = new ImageData(rgba, width, height);\n    ctx.putImageData(imgData, 0, 0);\n\n    const out = fs.createWriteStream(filename)\n    const stream = canvas.createPNGStream()\n    stream.pipe(out)\n}\n\nfunction findRegion(thresholdPixels, alreadySegmented, size, hill) {\n\n    const region = [];\n    const newPixels = [];\n\n    // Find the first pixel available\n    for (let i = 0; i < thresholdPixels.length; i++) {\n        if (thresholdPixels[i] === hill && alreadySegmented[i] === 0) {\n            region.push(i);\n            newPixels.push(i);\n            alreadySegmented[i] = 1;\n            break;\n        }\n    }\n\n    let top, bottom, left, right, newPixel;\n    while (newPixels.length > 0) {\n        newPixel = newPixels.pop();\n\n        top = newPixel - size;\n        if (top > 0 && thresholdPixels[top] === hill && alreadySegmented[top] === 0) {\n            region.push(top);\n            newPixels.push(top);\n            alreadySegmented[top] = 1;\n        }\n\n        bottom = newPixel + size;\n        if (bottom < thresholdPixels.length && thresholdPixels[bottom] === hill && alreadySegmented[bottom] === 0) {\n            region.push(bottom);\n            newPixels.push(bottom);\n            alreadySegmented[bottom] = 1;\n        }\n\n        left = newPixel - 1;\n        if (newPixel % size !== 0 && thresholdPixels[left] === hill && alreadySegmented[left] === 0) {\n            region.push(left);\n            newPixels.push(left);\n            alreadySegmented[left] = 1;\n        }\n\n        right = newPixel + 1;\n        if (right % size !== 0 && thresholdPixels[right] === hill && alreadySegmented[right] === 0) {\n            region.push(right);\n            newPixels.push(right);\n            alreadySegmented[right] = 1;\n        }\n    }\n\n    return region\n}\n\nfunction findAllSegments(pixels, segImgSize, segThreshold, minSegSize) {\n    let hillCount = 0;\n\n    const thresholdPixels = new Uint8ClampedArray(pixels.length);\n    for (let i = 0; i < pixels.length; i++) {\n        thresholdPixels[i] = pixels[i] > segThreshold;\n        hillCount += pixels[i] > segThreshold;\n    }\n\n    const valleyCount = pixels.length - hillCount;\n\n    const segments = [];\n\n    const alreadySegmented = new Uint8ClampedArray(pixels.length);\n\n    // Find all the \"hill\" regions\n    let segmentedCount = 0;\n    while (segmentedCount < hillCount) {\n        const segment = findRegion(thresholdPixels, alreadySegmented, segImgSize, 1);\n        if (segment.length > minSegSize) {\n            segments.push(segment);\n        }\n        segmentedCount += segment.length;\n    }\n\n    // Find all the \"valley\" regions\n    segmentedCount = 0;\n    while (segmentedCount < valleyCount) {\n        const segment = findRegion(thresholdPixels, alreadySegmented, segImgSize, 0);\n        if (segment.length > minSegSize) {\n            segments.push(segment);\n        }\n        segmentedCount += segment.length;\n    }\n\n    return segments;\n}\n\nexport async function cropResistantHash(image,\n                                        hashFunc = undefined,\n                                        limitSegments = undefined,\n                                        segmentThreshold = 128,\n                                        minSegmentSize = 500,\n                                        segmentationImageSize = 300) {\n\n    if (hashFunc === undefined) {\n        hashFunc = dhash;\n    }\n    const imageWidth = image.naturalWidth || image.width;\n    const imageHeight = image.naturalHeight || image.height;\n\n    segmentationImageSize = Math.min(imageWidth, imageHeight, segmentationImageSize);\n\n    const imageCanvas = canvasUtil.getImageCanvas(image);\n\n    const pixels = grayScaleConverter.convert(await canvasUtil.resizeImageAndGetData(imageCanvas, segmentationImageSize, segmentationImageSize));\n\n    boxBlur(pixels, segmentationImageSize, segmentationImageSize, 4);\n\n    const segments = findAllSegments(pixels, segmentationImageSize, segmentThreshold, minSegmentSize);\n\n    if (limitSegments) {\n        segments.sort((a, b) => b.length - a.length).splice(limitSegments);\n    }\n\n    const scaleW = imageWidth / segmentationImageSize;\n    const scaleH = imageHeight / segmentationImageSize;\n\n    const hashPromises = [];\n\n    for (let i = 0; i < segments.length; i++) {\n        const x = segments[i].map(num => num % segmentationImageSize);\n        const y = segments[i].map(num => num / segmentationImageSize);\n\n        const sx = Math.min(...x);\n        const sy = Math.min(...y);\n        const sw = Math.max(...x) + 1 - sx;\n        const sh = Math.max(...y) + 1 - sy;\n\n        const cropCanvas = canvasUtil.getImageCanvas(\n            canvasUtil.getImageCanvas(image),\n            sx * scaleW, sy * scaleH, sw * scaleW, sh * scaleH\n        );\n        hashPromises.push(hashFunc(cropCanvas));\n    }\n\n    const hashes = await Promise.all(hashPromises);\n\n    return new ImageMultiHash(hashes);\n}","const mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456];\nconst shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16];\n\nclass BlurStack {\n    r = 0;\n    next = null;\n}\n\nexport function boxBlur(pixels, width, height, radius) {\n    const div = 2 * radius + 1;\n\n    const widthMinus1 = width - 1;\n    const heightMinus1 = height - 1;\n    const radiusPlus1 = radius + 1;\n    const sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n    const stackStart = new BlurStack();\n    let stack = stackStart;\n    let stackEnd;\n\n    for (let i = 1; i < div; i++) {\n        stack = stack.next = new BlurStack();\n\n        if (i === radiusPlus1) {\n            stackEnd = stack;\n        }\n    }\n\n    stack.next = stackStart;\n    let stackIn = null;\n    let stackOut = null;\n    const mulSum = mulTable[radius];\n    const shgSum = shgTable[radius];\n    let p;\n    let rbs;\n    let yw = 0;\n    let yi = 0;\n\n    for (let y = 0; y < height; y++) {\n        let pr = pixels[yi],\n            rOutSum = radiusPlus1 * pr,\n            rSum = sumFactor * pr;\n        stack = stackStart;\n\n        for (let _i5 = 0; _i5 < radiusPlus1; _i5++) {\n            stack.r = pr;\n            stack = stack.next;\n        }\n\n        let rInSum = 0;\n\n        for (let _i6 = 1; _i6 < radiusPlus1; _i6++) {\n            rSum += (stack.r = pr = pixels[yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6))]) * (rbs = radiusPlus1 - _i6);\n            rInSum += pr;\n            stack = stack.next;\n        }\n\n        stackIn = stackStart;\n        stackOut = stackEnd;\n\n        for (let x = 0; x < width; x++) {\n            pixels[yi] = rSum * mulSum >> shgSum;\n            rSum -= rOutSum;\n            rOutSum -= stackIn.r;\n            rInSum += stackIn.r = pixels[yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)];\n            rSum += rInSum;\n            stackIn = stackIn.next;\n            rOutSum += pr = stackOut.r;\n            rInSum -= pr;\n            stackOut = stackOut.next;\n            yi += 1;\n        }\n\n        yw += width;\n    }\n\n    for (let _x2 = 0; _x2 < width; _x2++) {\n        yi = _x2;\n\n        let _pr2 = pixels[yi],\n            _rOutSum2 = radiusPlus1 * _pr2,\n            _rSum2 = sumFactor * _pr2,\n\n            stack = stackStart;\n\n        for (let _i7 = 0; _i7 < radiusPlus1; _i7++) {\n            stack.r = _pr2;\n            stack = stack.next;\n        }\n\n        let _rInSum2 = 0;\n\n        for (let _i8 = 1, yp = width; _i8 <= radius; _i8++) {\n            yi = yp + _x2;\n            _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);\n            _rInSum2 += _pr2;\n            stack = stack.next;\n\n            if (_i8 < heightMinus1) {\n                yp += width;\n            }\n        }\n\n        yi = _x2;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n\n        for (let _y2 = 0; _y2 < height; _y2++) {\n            p = yi;\n            pixels[p] = _rSum2 * mulSum >> shgSum;\n            _rSum2 -= _rOutSum2;\n            _rOutSum2 -= stackIn.r;\n            p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width;\n            _rSum2 += _rInSum2 += stackIn.r = pixels[p];\n            stackIn = stackIn.next;\n            _rOutSum2 += _pr2 = stackOut.r;\n            _rInSum2 -= _pr2;\n            stackOut = stackOut.next;\n            yi += width;\n        }\n    }\n}\n","\"use strict\";"],"names":[],"version":3,"file":"imagehash-web.js.map"}